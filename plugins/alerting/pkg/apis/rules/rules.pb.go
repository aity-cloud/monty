// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/rancher/opni/plugins/alerting/pkg/apis/rules/rules.proto

package rules

import (
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuleManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*Rule                `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleManifest) Reset() {
	*x = RuleManifest{}
	mi := &file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleManifest) ProtoMessage() {}

func (x *RuleManifest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleManifest.ProtoReflect.Descriptor instead.
func (*RuleManifest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDescGZIP(), []int{0}
}

func (x *RuleManifest) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleId        *v1.Reference          `protobuf:"bytes,1,opt,name=ruleId,proto3" json:"ruleId,omitempty"`
	GroupId       *v1.Reference          `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Expr          string                 `protobuf:"bytes,4,opt,name=expr,proto3" json:"expr,omitempty"`
	Duration      *durationpb.Duration   `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations   map[string]string      `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDescGZIP(), []int{1}
}

func (x *Rule) GetRuleId() *v1.Reference {
	if x != nil {
		return x.RuleId
	}
	return nil
}

func (x *Rule) GetGroupId() *v1.Reference {
	if x != nil {
		return x.GroupId
	}
	return nil
}

func (x *Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rule) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *Rule) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Rule) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Rule) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

var File_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto protoreflect.FileDescriptor

const file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDesc = "" +
	"\n" +
	"Cgithub.com/rancher/opni/plugins/alerting/pkg/apis/rules/rules.proto\x12\x0ealerting.rules\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/api/annotations.proto\x1a3github.com/rancher/opni/pkg/apis/core/v1/core.proto\":\n" +
	"\fRuleManifest\x12*\n" +
	"\x05rules\x18\x01 \x03(\v2\x14.alerting.rules.RuleR\x05rules\"\xb7\x03\n" +
	"\x04Rule\x12'\n" +
	"\x06ruleId\x18\x01 \x01(\v2\x0f.core.ReferenceR\x06ruleId\x12)\n" +
	"\agroupId\x18\x02 \x01(\v2\x0f.core.ReferenceR\agroupId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04expr\x18\x04 \x01(\tR\x04expr\x125\n" +
	"\bduration\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\bduration\x128\n" +
	"\x06labels\x18\x06 \x03(\v2 .alerting.rules.Rule.LabelsEntryR\x06labels\x12G\n" +
	"\vannotations\x18\a \x03(\v2%.alerting.rules.Rule.AnnotationsEntryR\vannotations\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012O\n" +
	"\bRuleSync\x12C\n" +
	"\tSyncRules\x12\x1c.alerting.rules.RuleManifest\x1a\x16.google.protobuf.Empty\"\x00B9Z7github.com/rancher/opni/plugins/alerting/pkg/apis/rulesb\x06proto3"

var (
	file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDescData []byte
)

func file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDesc), len(file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDesc)))
	})
	return file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDescData
}

var file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_goTypes = []any{
	(*RuleManifest)(nil),        // 0: alerting.rules.RuleManifest
	(*Rule)(nil),                // 1: alerting.rules.Rule
	nil,                         // 2: alerting.rules.Rule.LabelsEntry
	nil,                         // 3: alerting.rules.Rule.AnnotationsEntry
	(*v1.Reference)(nil),        // 4: core.Reference
	(*durationpb.Duration)(nil), // 5: google.protobuf.Duration
	(*emptypb.Empty)(nil),       // 6: google.protobuf.Empty
}
var file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_depIdxs = []int32{
	1, // 0: alerting.rules.RuleManifest.rules:type_name -> alerting.rules.Rule
	4, // 1: alerting.rules.Rule.ruleId:type_name -> core.Reference
	4, // 2: alerting.rules.Rule.groupId:type_name -> core.Reference
	5, // 3: alerting.rules.Rule.duration:type_name -> google.protobuf.Duration
	2, // 4: alerting.rules.Rule.labels:type_name -> alerting.rules.Rule.LabelsEntry
	3, // 5: alerting.rules.Rule.annotations:type_name -> alerting.rules.Rule.AnnotationsEntry
	0, // 6: alerting.rules.RuleSync.SyncRules:input_type -> alerting.rules.RuleManifest
	6, // 7: alerting.rules.RuleSync.SyncRules:output_type -> google.protobuf.Empty
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_init() }
func file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_init() {
	if File_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDesc), len(file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_depIdxs,
		MessageInfos:      file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto = out.File
	file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_goTypes = nil
	file_github_com_rancher_opni_plugins_alerting_pkg_apis_rules_rules_proto_depIdxs = nil
}
