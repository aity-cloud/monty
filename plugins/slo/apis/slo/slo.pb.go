// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/rancher/opni/plugins/slo/apis/slo/slo.proto

package slo

import (
	v11 "github.com/rancher/opni/pkg/apis/alerting/v1"
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SLOStatusState int32

const (
	SLOStatusState_InProgress SLOStatusState = 0
	SLOStatusState_Creating   SLOStatusState = 1
	SLOStatusState_NoData     SLOStatusState = 2
	SLOStatusState_Ok         SLOStatusState = 3
	SLOStatusState_Warning    SLOStatusState = 4
	SLOStatusState_Breaching  SLOStatusState = 5
	// When budgeting or alerting rules have no data, but the rule has data
	SLOStatusState_PartialDataOk SLOStatusState = 6
	SLOStatusState_InternalError SLOStatusState = 7
)

// Enum value maps for SLOStatusState.
var (
	SLOStatusState_name = map[int32]string{
		0: "InProgress",
		1: "Creating",
		2: "NoData",
		3: "Ok",
		4: "Warning",
		5: "Breaching",
		6: "PartialDataOk",
		7: "InternalError",
	}
	SLOStatusState_value = map[string]int32{
		"InProgress":    0,
		"Creating":      1,
		"NoData":        2,
		"Ok":            3,
		"Warning":       4,
		"Breaching":     5,
		"PartialDataOk": 6,
		"InternalError": 7,
	}
)

func (x SLOStatusState) Enum() *SLOStatusState {
	p := new(SLOStatusState)
	*p = x
	return p
}

func (x SLOStatusState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SLOStatusState) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_enumTypes[0].Descriptor()
}

func (SLOStatusState) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_enumTypes[0]
}

func (x SLOStatusState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SLOStatusState.Descriptor instead.
func (SLOStatusState) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{0}
}

type MultiClusterSLO struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CloneId       *v1.Reference          `protobuf:"bytes,1,opt,name=cloneId,proto3" json:"cloneId,omitempty"`
	Clusters      []*v1.Reference        `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiClusterSLO) Reset() {
	*x = MultiClusterSLO{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiClusterSLO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiClusterSLO) ProtoMessage() {}

func (x *MultiClusterSLO) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiClusterSLO.ProtoReflect.Descriptor instead.
func (*MultiClusterSLO) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{0}
}

func (x *MultiClusterSLO) GetCloneId() *v1.Reference {
	if x != nil {
		return x.CloneId
	}
	return nil
}

func (x *MultiClusterSLO) GetClusters() []*v1.Reference {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type MultiClusterFailures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Failures      []string               `protobuf:"bytes,1,rep,name=failures,proto3" json:"failures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiClusterFailures) Reset() {
	*x = MultiClusterFailures{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiClusterFailures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiClusterFailures) ProtoMessage() {}

func (x *MultiClusterFailures) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiClusterFailures.ProtoReflect.Descriptor instead.
func (*MultiClusterFailures) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{1}
}

func (x *MultiClusterFailures) GetFailures() []string {
	if x != nil {
		return x.Failures
	}
	return nil
}

type ListEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasource    string                 `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"`
	ServiceId     string                 `protobuf:"bytes,2,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ClusterId     string                 `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	MetricId      string                 `protobuf:"bytes,4,opt,name=metricId,proto3" json:"metricId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{2}
}

func (x *ListEventsRequest) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *ListEventsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ListEventsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListEventsRequest) GetMetricId() string {
	if x != nil {
		return x.MetricId
	}
	return ""
}

type ListMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasource    string                 `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"`
	ClusterId     string                 `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ServiceId     string                 `protobuf:"bytes,3,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetricsRequest) Reset() {
	*x = ListMetricsRequest{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsRequest) ProtoMessage() {}

func (x *ListMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListMetricsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{3}
}

func (x *ListMetricsRequest) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *ListMetricsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListMetricsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type ListServicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasource    string                 `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"`
	ClusterId     string                 `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{4}
}

func (x *ListServicesRequest) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *ListServicesRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type EventList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Event               `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventList) Reset() {
	*x = EventList{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventList) ProtoMessage() {}

func (x *EventList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventList.ProtoReflect.Descriptor instead.
func (*EventList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{5}
}

func (x *EventList) GetItems() []*Event {
	if x != nil {
		return x.Items
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Vals          []string               `protobuf:"bytes,2,rep,name=vals,proto3" json:"vals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{6}
}

func (x *Event) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Event) GetVals() []string {
	if x != nil {
		return x.Vals
	}
	return nil
}

type ServiceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	ClusterId     string                 `protobuf:"bytes,5,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	MetricName    string                 `protobuf:"bytes,2,opt,name=metricName,proto3" json:"metricName,omitempty"`
	MetricIdGood  string                 `protobuf:"bytes,3,opt,name=metricIdGood,proto3" json:"metricIdGood,omitempty"`
	MetricIdTotal string                 `protobuf:"bytes,4,opt,name=metricIdTotal,proto3" json:"metricIdTotal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{7}
}

func (x *ServiceInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ServiceInfo) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ServiceInfo) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *ServiceInfo) GetMetricIdGood() string {
	if x != nil {
		return x.MetricIdGood
	}
	return ""
}

func (x *ServiceInfo) GetMetricIdTotal() string {
	if x != nil {
		return x.MetricIdTotal
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ClusterId     string                 `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{8}
}

func (x *Service) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Service) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ServiceList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Service             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceList) Reset() {
	*x = ServiceList{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceList) ProtoMessage() {}

func (x *ServiceList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceList.ProtoReflect.Descriptor instead.
func (*ServiceList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{9}
}

func (x *ServiceList) GetItems() []*Service {
	if x != nil {
		return x.Items
	}
	return nil
}

type Label struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Label) Reset() {
	*x = Label{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{10}
}

func (x *Label) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Alert struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Name                    string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NotificationTarget      string                 `protobuf:"bytes,2,opt,name=notificationTarget,proto3" json:"notificationTarget,omitempty"` // enum of Slack, PagerDuty, Email, SMS, etc..
	NotificationDescription string                 `protobuf:"bytes,3,opt,name=notificationDescription,proto3" json:"notificationDescription,omitempty"`
	Description             string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ConditionType           string                 `protobuf:"bytes,5,opt,name=conditionType,proto3" json:"conditionType,omitempty"`
	ThresholdType           string                 `protobuf:"bytes,6,opt,name=thresholdType,proto3" json:"thresholdType,omitempty"`
	OnNoData                bool                   `protobuf:"varint,7,opt,name=onNoData,proto3" json:"onNoData,omitempty"`
	OnCreate                bool                   `protobuf:"varint,8,opt,name=onCreate,proto3" json:"onCreate,omitempty"`
	OnBreach                bool                   `protobuf:"varint,9,opt,name=onBreach,proto3" json:"onBreach,omitempty"`
	OnResolved              bool                   `protobuf:"varint,10,opt,name=onResolved,proto3" json:"onResolved,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Alert) Reset() {
	*x = Alert{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{11}
}

func (x *Alert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert) GetNotificationTarget() string {
	if x != nil {
		return x.NotificationTarget
	}
	return ""
}

func (x *Alert) GetNotificationDescription() string {
	if x != nil {
		return x.NotificationDescription
	}
	return ""
}

func (x *Alert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Alert) GetConditionType() string {
	if x != nil {
		return x.ConditionType
	}
	return ""
}

func (x *Alert) GetThresholdType() string {
	if x != nil {
		return x.ThresholdType
	}
	return ""
}

func (x *Alert) GetOnNoData() bool {
	if x != nil {
		return x.OnNoData
	}
	return false
}

func (x *Alert) GetOnCreate() bool {
	if x != nil {
		return x.OnCreate
	}
	return false
}

func (x *Alert) GetOnBreach() bool {
	if x != nil {
		return x.OnBreach
	}
	return false
}

func (x *Alert) GetOnResolved() bool {
	if x != nil {
		return x.OnResolved
	}
	return false
}

type ServiceLevelObjective struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Datasource        string                 `protobuf:"bytes,2,opt,name=datasource,proto3" json:"datasource,omitempty"`
	ClusterId         string                 `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ServiceId         string                 `protobuf:"bytes,4,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	GoodMetricName    string                 `protobuf:"bytes,5,opt,name=goodMetricName,proto3" json:"goodMetricName,omitempty"`
	TotalMetricName   string                 `protobuf:"bytes,6,opt,name=totalMetricName,proto3" json:"totalMetricName,omitempty"`
	GoodEvents        []*Event               `protobuf:"bytes,7,rep,name=goodEvents,proto3" json:"goodEvents,omitempty"`
	TotalEvents       []*Event               `protobuf:"bytes,8,rep,name=totalEvents,proto3" json:"totalEvents,omitempty"`
	SloPeriod         string                 `protobuf:"bytes,9,opt,name=sloPeriod,proto3" json:"sloPeriod,omitempty"`                  // 7d, 28d or 30d
	BudgetingInterval *durationpb.Duration   `protobuf:"bytes,10,opt,name=budgetingInterval,proto3" json:"budgetingInterval,omitempty"` // budgeting interval should be between 1m and 60m
	Target            *Target                `protobuf:"bytes,11,opt,name=target,proto3" json:"target,omitempty"`
	Labels            []*Label               `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty"`
	AttachedEndpoints *v11.AttachedEndpoints `protobuf:"bytes,13,opt,name=attachedEndpoints,proto3" json:"attachedEndpoints,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ServiceLevelObjective) Reset() {
	*x = ServiceLevelObjective{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceLevelObjective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLevelObjective) ProtoMessage() {}

func (x *ServiceLevelObjective) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLevelObjective.ProtoReflect.Descriptor instead.
func (*ServiceLevelObjective) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{12}
}

func (x *ServiceLevelObjective) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceLevelObjective) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *ServiceLevelObjective) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ServiceLevelObjective) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceLevelObjective) GetGoodMetricName() string {
	if x != nil {
		return x.GoodMetricName
	}
	return ""
}

func (x *ServiceLevelObjective) GetTotalMetricName() string {
	if x != nil {
		return x.TotalMetricName
	}
	return ""
}

func (x *ServiceLevelObjective) GetGoodEvents() []*Event {
	if x != nil {
		return x.GoodEvents
	}
	return nil
}

func (x *ServiceLevelObjective) GetTotalEvents() []*Event {
	if x != nil {
		return x.TotalEvents
	}
	return nil
}

func (x *ServiceLevelObjective) GetSloPeriod() string {
	if x != nil {
		return x.SloPeriod
	}
	return ""
}

func (x *ServiceLevelObjective) GetBudgetingInterval() *durationpb.Duration {
	if x != nil {
		return x.BudgetingInterval
	}
	return nil
}

func (x *ServiceLevelObjective) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ServiceLevelObjective) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ServiceLevelObjective) GetAttachedEndpoints() *v11.AttachedEndpoints {
	if x != nil {
		return x.AttachedEndpoints
	}
	return nil
}

type CreateSLORequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slo           *ServiceLevelObjective `protobuf:"bytes,1,opt,name=slo,proto3" json:"slo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSLORequest) Reset() {
	*x = CreateSLORequest{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSLORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSLORequest) ProtoMessage() {}

func (x *CreateSLORequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSLORequest.ProtoReflect.Descriptor instead.
func (*CreateSLORequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{13}
}

func (x *CreateSLORequest) GetSlo() *ServiceLevelObjective {
	if x != nil {
		return x.Slo
	}
	return nil
}

type EventPairList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*EventPair           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPairList) Reset() {
	*x = EventPairList{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPairList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPairList) ProtoMessage() {}

func (x *EventPairList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPairList.ProtoReflect.Descriptor instead.
func (*EventPairList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{14}
}

func (x *EventPairList) GetItems() []*EventPair {
	if x != nil {
		return x.Items
	}
	return nil
}

type EventPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Vals          []string               `protobuf:"bytes,2,rep,name=vals,proto3" json:"vals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPair) Reset() {
	*x = EventPair{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPair) ProtoMessage() {}

func (x *EventPair) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPair.ProtoReflect.Descriptor instead.
func (*EventPair) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{15}
}

func (x *EventPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EventPair) GetVals() []string {
	if x != nil {
		return x.Vals
	}
	return nil
}

type SLOData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SLO           *ServiceLevelObjective `protobuf:"bytes,2,opt,name=SLO,proto3" json:"SLO,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SLOData) Reset() {
	*x = SLOData{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SLOData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLOData) ProtoMessage() {}

func (x *SLOData) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLOData.ProtoReflect.Descriptor instead.
func (*SLOData) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{16}
}

func (x *SLOData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SLOData) GetSLO() *ServiceLevelObjective {
	if x != nil {
		return x.SLO
	}
	return nil
}

func (x *SLOData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float64                `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{17}
}

func (x *Target) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Metric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata      *MetricMetadata        `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{18}
}

func (x *Metric) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metric) GetMetadata() *MetricMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MetricMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Unit          string                 `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricMetadata) Reset() {
	*x = MetricMetadata{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricMetadata) ProtoMessage() {}

func (x *MetricMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricMetadata.ProtoReflect.Descriptor instead.
func (*MetricMetadata) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{19}
}

func (x *MetricMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricMetadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetricMetadata) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type MetricList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Metric              `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricList) Reset() {
	*x = MetricList{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricList) ProtoMessage() {}

func (x *MetricList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricList.ProtoReflect.Descriptor instead.
func (*MetricList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{20}
}

func (x *MetricList) GetItems() []*Metric {
	if x != nil {
		return x.Items
	}
	return nil
}

type MetricGroupList struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GroupNameToMetrics map[string]*MetricList `protobuf:"bytes,1,rep,name=groupNameToMetrics,proto3" json:"groupNameToMetrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MetricGroupList) Reset() {
	*x = MetricGroupList{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricGroupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricGroupList) ProtoMessage() {}

func (x *MetricGroupList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricGroupList.ProtoReflect.Descriptor instead.
func (*MetricGroupList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{21}
}

func (x *MetricGroupList) GetGroupNameToMetrics() map[string]*MetricList {
	if x != nil {
		return x.GroupNameToMetrics
	}
	return nil
}

type ServiceLevelObjectiveList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*SLOData             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceLevelObjectiveList) Reset() {
	*x = ServiceLevelObjectiveList{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceLevelObjectiveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceLevelObjectiveList) ProtoMessage() {}

func (x *ServiceLevelObjectiveList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceLevelObjectiveList.ProtoReflect.Descriptor instead.
func (*ServiceLevelObjectiveList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{22}
}

func (x *ServiceLevelObjectiveList) GetItems() []*SLOData {
	if x != nil {
		return x.Items
	}
	return nil
}

type SLOStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         SLOStatusState         `protobuf:"varint,1,opt,name=state,proto3,enum=slo.SLOStatusState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SLOStatus) Reset() {
	*x = SLOStatus{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SLOStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLOStatus) ProtoMessage() {}

func (x *SLOStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLOStatus.ProtoReflect.Descriptor instead.
func (*SLOStatus) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{23}
}

func (x *SLOStatus) GetState() SLOStatusState {
	if x != nil {
		return x.State
	}
	return SLOStatusState_InProgress
}

type SLOPreviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlotVector    *PlotVector            `protobuf:"bytes,1,opt,name=plotVector,proto3" json:"plotVector,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SLOPreviewResponse) Reset() {
	*x = SLOPreviewResponse{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SLOPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLOPreviewResponse) ProtoMessage() {}

func (x *SLOPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLOPreviewResponse.ProtoReflect.Descriptor instead.
func (*SLOPreviewResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{24}
}

func (x *SLOPreviewResponse) GetPlotVector() *PlotVector {
	if x != nil {
		return x.PlotVector
	}
	return nil
}

type PlotVector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Objective     float64                `protobuf:"fixed64,1,opt,name=objective,proto3" json:"objective,omitempty"`
	Items         []*DataPoint           `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Windows       []*AlertFiringWindows  `protobuf:"bytes,3,rep,name=windows,proto3" json:"windows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlotVector) Reset() {
	*x = PlotVector{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotVector) ProtoMessage() {}

func (x *PlotVector) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotVector.ProtoReflect.Descriptor instead.
func (*PlotVector) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{25}
}

func (x *PlotVector) GetObjective() float64 {
	if x != nil {
		return x.Objective
	}
	return 0
}

func (x *PlotVector) GetItems() []*DataPoint {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PlotVector) GetWindows() []*AlertFiringWindows {
	if x != nil {
		return x.Windows
	}
	return nil
}

type DataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sli           float64                `protobuf:"fixed64,1,opt,name=sli,proto3" json:"sli,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{26}
}

func (x *DataPoint) GetSli() float64 {
	if x != nil {
		return x.Sli
	}
	return 0
}

func (x *DataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AlertFiringWindows struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Severity      string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlertFiringWindows) Reset() {
	*x = AlertFiringWindows{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertFiringWindows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertFiringWindows) ProtoMessage() {}

func (x *AlertFiringWindows) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertFiringWindows.ProtoReflect.Descriptor instead.
func (*AlertFiringWindows) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{27}
}

func (x *AlertFiringWindows) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *AlertFiringWindows) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *AlertFiringWindows) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

type ListServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasource    string                 `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServiceRequest) Reset() {
	*x = ListServiceRequest{}
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRequest) ProtoMessage() {}

func (x *ListServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRequest.ProtoReflect.Descriptor instead.
func (*ListServiceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP(), []int{28}
}

func (x *ListServiceRequest) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

var File_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto protoreflect.FileDescriptor

const file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDesc = "" +
	"\n" +
	"6github.com/rancher/opni/plugins/slo/apis/slo/slo.proto\x12\x03slo\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x15google/api/http.proto\x1a\x1cgoogle/api/annotations.proto\x1a3github.com/rancher/opni/pkg/apis/core/v1/core.proto\x1a\x17google/rpc/status.proto\x1a;github.com/rancher/opni/pkg/apis/alerting/v1/alerting.proto\x1aEgithub.com/rancher/opni/pkg/apis/alerting/v1/alerting.condition.proto\x1aDgithub.com/rancher/opni/pkg/apis/alerting/v1/alerting.endpoint.proto\"i\n" +
	"\x0fMultiClusterSLO\x12)\n" +
	"\acloneId\x18\x01 \x01(\v2\x0f.core.ReferenceR\acloneId\x12+\n" +
	"\bclusters\x18\x02 \x03(\v2\x0f.core.ReferenceR\bclusters\"2\n" +
	"\x14MultiClusterFailures\x12\x1a\n" +
	"\bfailures\x18\x01 \x03(\tR\bfailures\"\x8b\x01\n" +
	"\x11ListEventsRequest\x12\x1e\n" +
	"\n" +
	"datasource\x18\x01 \x01(\tR\n" +
	"datasource\x12\x1c\n" +
	"\tserviceId\x18\x02 \x01(\tR\tserviceId\x12\x1c\n" +
	"\tclusterId\x18\x03 \x01(\tR\tclusterId\x12\x1a\n" +
	"\bmetricId\x18\x04 \x01(\tR\bmetricId\"p\n" +
	"\x12ListMetricsRequest\x12\x1e\n" +
	"\n" +
	"datasource\x18\x01 \x01(\tR\n" +
	"datasource\x12\x1c\n" +
	"\tclusterId\x18\x02 \x01(\tR\tclusterId\x12\x1c\n" +
	"\tserviceId\x18\x03 \x01(\tR\tserviceId\"S\n" +
	"\x13ListServicesRequest\x12\x1e\n" +
	"\n" +
	"datasource\x18\x01 \x01(\tR\n" +
	"datasource\x12\x1c\n" +
	"\tclusterId\x18\x02 \x01(\tR\tclusterId\"-\n" +
	"\tEventList\x12 \n" +
	"\x05items\x18\x01 \x03(\v2\n" +
	".slo.EventR\x05items\"-\n" +
	"\x05Event\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04vals\x18\x02 \x03(\tR\x04vals\"\xab\x01\n" +
	"\vServiceInfo\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\tR\x05jobId\x12\x1c\n" +
	"\tclusterId\x18\x05 \x01(\tR\tclusterId\x12\x1e\n" +
	"\n" +
	"metricName\x18\x02 \x01(\tR\n" +
	"metricName\x12\"\n" +
	"\fmetricIdGood\x18\x03 \x01(\tR\fmetricIdGood\x12$\n" +
	"\rmetricIdTotal\x18\x04 \x01(\tR\rmetricIdTotal\"E\n" +
	"\aService\x12\x1c\n" +
	"\tserviceId\x18\x01 \x01(\tR\tserviceId\x12\x1c\n" +
	"\tclusterId\x18\x02 \x01(\tR\tclusterId\"1\n" +
	"\vServiceList\x12\"\n" +
	"\x05items\x18\x01 \x03(\v2\f.slo.ServiceR\x05items\"\x1b\n" +
	"\x05Label\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xe7\x02\n" +
	"\x05Alert\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\x12notificationTarget\x18\x02 \x01(\tR\x12notificationTarget\x128\n" +
	"\x17notificationDescription\x18\x03 \x01(\tR\x17notificationDescription\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12$\n" +
	"\rconditionType\x18\x05 \x01(\tR\rconditionType\x12$\n" +
	"\rthresholdType\x18\x06 \x01(\tR\rthresholdType\x12\x1a\n" +
	"\bonNoData\x18\a \x01(\bR\bonNoData\x12\x1a\n" +
	"\bonCreate\x18\b \x01(\bR\bonCreate\x12\x1a\n" +
	"\bonBreach\x18\t \x01(\bR\bonBreach\x12\x1e\n" +
	"\n" +
	"onResolved\x18\n" +
	" \x01(\bR\n" +
	"onResolved\"\xae\x04\n" +
	"\x15ServiceLevelObjective\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"datasource\x18\x02 \x01(\tR\n" +
	"datasource\x12\x1c\n" +
	"\tclusterId\x18\x03 \x01(\tR\tclusterId\x12\x1c\n" +
	"\tserviceId\x18\x04 \x01(\tR\tserviceId\x12&\n" +
	"\x0egoodMetricName\x18\x05 \x01(\tR\x0egoodMetricName\x12(\n" +
	"\x0ftotalMetricName\x18\x06 \x01(\tR\x0ftotalMetricName\x12*\n" +
	"\n" +
	"goodEvents\x18\a \x03(\v2\n" +
	".slo.EventR\n" +
	"goodEvents\x12,\n" +
	"\vtotalEvents\x18\b \x03(\v2\n" +
	".slo.EventR\vtotalEvents\x12\x1c\n" +
	"\tsloPeriod\x18\t \x01(\tR\tsloPeriod\x12G\n" +
	"\x11budgetingInterval\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\x11budgetingInterval\x12#\n" +
	"\x06target\x18\v \x01(\v2\v.slo.TargetR\x06target\x12\"\n" +
	"\x06labels\x18\f \x03(\v2\n" +
	".slo.LabelR\x06labels\x12I\n" +
	"\x11attachedEndpoints\x18\r \x01(\v2\x1b.alerting.AttachedEndpointsR\x11attachedEndpoints\"@\n" +
	"\x10CreateSLORequest\x12,\n" +
	"\x03slo\x18\x01 \x01(\v2\x1a.slo.ServiceLevelObjectiveR\x03slo\"5\n" +
	"\rEventPairList\x12$\n" +
	"\x05items\x18\x01 \x03(\v2\x0e.slo.EventPairR\x05items\"1\n" +
	"\tEventPair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04vals\x18\x02 \x03(\tR\x04vals\"\x81\x01\n" +
	"\aSLOData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12,\n" +
	"\x03SLO\x18\x02 \x01(\v2\x1a.slo.ServiceLevelObjectiveR\x03SLO\x128\n" +
	"\tcreatedAt\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x1e\n" +
	"\x06Target\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x01R\x05value\"I\n" +
	"\x06Metric\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12/\n" +
	"\bmetadata\x18\x02 \x01(\v2\x13.slo.MetricMetadataR\bmetadata\"Z\n" +
	"\x0eMetricMetadata\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04unit\x18\x03 \x01(\tR\x04unit\"/\n" +
	"\n" +
	"MetricList\x12!\n" +
	"\x05items\x18\x01 \x03(\v2\v.slo.MetricR\x05items\"\xc7\x01\n" +
	"\x0fMetricGroupList\x12\\\n" +
	"\x12groupNameToMetrics\x18\x01 \x03(\v2,.slo.MetricGroupList.GroupNameToMetricsEntryR\x12groupNameToMetrics\x1aV\n" +
	"\x17GroupNameToMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.slo.MetricListR\x05value:\x028\x01\"?\n" +
	"\x19ServiceLevelObjectiveList\x12\"\n" +
	"\x05items\x18\x01 \x03(\v2\f.slo.SLODataR\x05items\"6\n" +
	"\tSLOStatus\x12)\n" +
	"\x05state\x18\x01 \x01(\x0e2\x13.slo.SLOStatusStateR\x05state\"E\n" +
	"\x12SLOPreviewResponse\x12/\n" +
	"\n" +
	"plotVector\x18\x01 \x01(\v2\x0f.slo.PlotVectorR\n" +
	"plotVector\"\x83\x01\n" +
	"\n" +
	"PlotVector\x12\x1c\n" +
	"\tobjective\x18\x01 \x01(\x01R\tobjective\x12$\n" +
	"\x05items\x18\x02 \x03(\v2\x0e.slo.DataPointR\x05items\x121\n" +
	"\awindows\x18\x03 \x03(\v2\x17.slo.AlertFiringWindowsR\awindows\"W\n" +
	"\tDataPoint\x12\x10\n" +
	"\x03sli\x18\x01 \x01(\x01R\x03sli\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x90\x01\n" +
	"\x12AlertFiringWindows\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\"4\n" +
	"\x12ListServiceRequest\x12\x1e\n" +
	"\n" +
	"datasource\x18\x01 \x01(\tR\n" +
	"datasource*\x84\x01\n" +
	"\x0eSLOStatusState\x12\x0e\n" +
	"\n" +
	"InProgress\x10\x00\x12\f\n" +
	"\bCreating\x10\x01\x12\n" +
	"\n" +
	"\x06NoData\x10\x02\x12\x06\n" +
	"\x02Ok\x10\x03\x12\v\n" +
	"\aWarning\x10\x04\x12\r\n" +
	"\tBreaching\x10\x05\x12\x11\n" +
	"\rPartialDataOk\x10\x06\x12\x11\n" +
	"\rInternalError\x10\a2\xb6\a\n" +
	"\x03SLO\x12E\n" +
	"\tCreateSLO\x12\x15.slo.CreateSLORequest\x1a\x0f.core.Reference\"\x10\x82\xd3\xe4\x93\x02\n" +
	":\x01*\"\x05/slos\x12;\n" +
	"\x06GetSLO\x12\x0f.core.Reference\x1a\f.slo.SLOData\"\x12\x82\xd3\xe4\x93\x02\f\"\n" +
	"/slos/{id}\x12Q\n" +
	"\bListSLOs\x12\x16.google.protobuf.Empty\x1a\x1e.slo.ServiceLevelObjectiveList\"\r\x82\xd3\xe4\x93\x02\a\x12\x05/slos\x12O\n" +
	"\tUpdateSLO\x12\f.slo.SLOData\x1a\x16.google.protobuf.Empty\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\x1a\x11/slos/{id}/update\x12H\n" +
	"\tDeleteSLO\x12\x0f.core.Reference\x1a\x16.google.protobuf.Empty\"\x12\x82\xd3\xe4\x93\x02\f*\n" +
	"/slos/{id}\x12C\n" +
	"\bCloneSLO\x12\x0f.core.Reference\x1a\f.slo.SLOData\"\x18\x82\xd3\xe4\x93\x02\x12\"\x10/slos/{id}/clone\x12q\n" +
	"\x0fCloneToClusters\x12\x14.slo.MultiClusterSLO\x1a\x19.slo.MultiClusterFailures\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/slos/{cloneId.id}/cloneToClusters\x12Q\n" +
	"\vListMetrics\x12\x17.slo.ListMetricsRequest\x1a\x14.slo.MetricGroupList\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\"\b/metrics\x12P\n" +
	"\fListServices\x12\x18.slo.ListServicesRequest\x1a\x10.slo.ServiceList\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/services\x12E\n" +
	"\n" +
	"ListEvents\x12\x16.slo.ListEventsRequest\x1a\x0e.slo.EventList\"\x0f\x82\xd3\xe4\x93\x02\t\"\a/events\x12D\n" +
	"\x06Status\x12\x0f.core.Reference\x1a\x0e.slo.SLOStatus\"\x19\x82\xd3\xe4\x93\x02\x13\"\x11/slos/{id}/status\x12S\n" +
	"\aPreview\x12\x15.slo.CreateSLORequest\x1a\x17.slo.SLOPreviewResponse\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/slos/previewB.Z,github.com/rancher/opni/plugins/slo/apis/slob\x06proto3"

var (
	file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescData []byte
)

func file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDesc), len(file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDesc)))
	})
	return file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDescData
}

var file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_goTypes = []any{
	(SLOStatusState)(0),               // 0: slo.SLOStatusState
	(*MultiClusterSLO)(nil),           // 1: slo.MultiClusterSLO
	(*MultiClusterFailures)(nil),      // 2: slo.MultiClusterFailures
	(*ListEventsRequest)(nil),         // 3: slo.ListEventsRequest
	(*ListMetricsRequest)(nil),        // 4: slo.ListMetricsRequest
	(*ListServicesRequest)(nil),       // 5: slo.ListServicesRequest
	(*EventList)(nil),                 // 6: slo.EventList
	(*Event)(nil),                     // 7: slo.Event
	(*ServiceInfo)(nil),               // 8: slo.ServiceInfo
	(*Service)(nil),                   // 9: slo.Service
	(*ServiceList)(nil),               // 10: slo.ServiceList
	(*Label)(nil),                     // 11: slo.Label
	(*Alert)(nil),                     // 12: slo.Alert
	(*ServiceLevelObjective)(nil),     // 13: slo.ServiceLevelObjective
	(*CreateSLORequest)(nil),          // 14: slo.CreateSLORequest
	(*EventPairList)(nil),             // 15: slo.EventPairList
	(*EventPair)(nil),                 // 16: slo.EventPair
	(*SLOData)(nil),                   // 17: slo.SLOData
	(*Target)(nil),                    // 18: slo.Target
	(*Metric)(nil),                    // 19: slo.Metric
	(*MetricMetadata)(nil),            // 20: slo.MetricMetadata
	(*MetricList)(nil),                // 21: slo.MetricList
	(*MetricGroupList)(nil),           // 22: slo.MetricGroupList
	(*ServiceLevelObjectiveList)(nil), // 23: slo.ServiceLevelObjectiveList
	(*SLOStatus)(nil),                 // 24: slo.SLOStatus
	(*SLOPreviewResponse)(nil),        // 25: slo.SLOPreviewResponse
	(*PlotVector)(nil),                // 26: slo.PlotVector
	(*DataPoint)(nil),                 // 27: slo.DataPoint
	(*AlertFiringWindows)(nil),        // 28: slo.AlertFiringWindows
	(*ListServiceRequest)(nil),        // 29: slo.ListServiceRequest
	nil,                               // 30: slo.MetricGroupList.GroupNameToMetricsEntry
	(*v1.Reference)(nil),              // 31: core.Reference
	(*durationpb.Duration)(nil),       // 32: google.protobuf.Duration
	(*v11.AttachedEndpoints)(nil),     // 33: alerting.AttachedEndpoints
	(*timestamppb.Timestamp)(nil),     // 34: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 35: google.protobuf.Empty
}
var file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_depIdxs = []int32{
	31, // 0: slo.MultiClusterSLO.cloneId:type_name -> core.Reference
	31, // 1: slo.MultiClusterSLO.clusters:type_name -> core.Reference
	7,  // 2: slo.EventList.items:type_name -> slo.Event
	9,  // 3: slo.ServiceList.items:type_name -> slo.Service
	7,  // 4: slo.ServiceLevelObjective.goodEvents:type_name -> slo.Event
	7,  // 5: slo.ServiceLevelObjective.totalEvents:type_name -> slo.Event
	32, // 6: slo.ServiceLevelObjective.budgetingInterval:type_name -> google.protobuf.Duration
	18, // 7: slo.ServiceLevelObjective.target:type_name -> slo.Target
	11, // 8: slo.ServiceLevelObjective.labels:type_name -> slo.Label
	33, // 9: slo.ServiceLevelObjective.attachedEndpoints:type_name -> alerting.AttachedEndpoints
	13, // 10: slo.CreateSLORequest.slo:type_name -> slo.ServiceLevelObjective
	16, // 11: slo.EventPairList.items:type_name -> slo.EventPair
	13, // 12: slo.SLOData.SLO:type_name -> slo.ServiceLevelObjective
	34, // 13: slo.SLOData.createdAt:type_name -> google.protobuf.Timestamp
	20, // 14: slo.Metric.metadata:type_name -> slo.MetricMetadata
	19, // 15: slo.MetricList.items:type_name -> slo.Metric
	30, // 16: slo.MetricGroupList.groupNameToMetrics:type_name -> slo.MetricGroupList.GroupNameToMetricsEntry
	17, // 17: slo.ServiceLevelObjectiveList.items:type_name -> slo.SLOData
	0,  // 18: slo.SLOStatus.state:type_name -> slo.SLOStatusState
	26, // 19: slo.SLOPreviewResponse.plotVector:type_name -> slo.PlotVector
	27, // 20: slo.PlotVector.items:type_name -> slo.DataPoint
	28, // 21: slo.PlotVector.windows:type_name -> slo.AlertFiringWindows
	34, // 22: slo.DataPoint.timestamp:type_name -> google.protobuf.Timestamp
	34, // 23: slo.AlertFiringWindows.start:type_name -> google.protobuf.Timestamp
	34, // 24: slo.AlertFiringWindows.end:type_name -> google.protobuf.Timestamp
	21, // 25: slo.MetricGroupList.GroupNameToMetricsEntry.value:type_name -> slo.MetricList
	14, // 26: slo.SLO.CreateSLO:input_type -> slo.CreateSLORequest
	31, // 27: slo.SLO.GetSLO:input_type -> core.Reference
	35, // 28: slo.SLO.ListSLOs:input_type -> google.protobuf.Empty
	17, // 29: slo.SLO.UpdateSLO:input_type -> slo.SLOData
	31, // 30: slo.SLO.DeleteSLO:input_type -> core.Reference
	31, // 31: slo.SLO.CloneSLO:input_type -> core.Reference
	1,  // 32: slo.SLO.CloneToClusters:input_type -> slo.MultiClusterSLO
	4,  // 33: slo.SLO.ListMetrics:input_type -> slo.ListMetricsRequest
	5,  // 34: slo.SLO.ListServices:input_type -> slo.ListServicesRequest
	3,  // 35: slo.SLO.ListEvents:input_type -> slo.ListEventsRequest
	31, // 36: slo.SLO.Status:input_type -> core.Reference
	14, // 37: slo.SLO.Preview:input_type -> slo.CreateSLORequest
	31, // 38: slo.SLO.CreateSLO:output_type -> core.Reference
	17, // 39: slo.SLO.GetSLO:output_type -> slo.SLOData
	23, // 40: slo.SLO.ListSLOs:output_type -> slo.ServiceLevelObjectiveList
	35, // 41: slo.SLO.UpdateSLO:output_type -> google.protobuf.Empty
	35, // 42: slo.SLO.DeleteSLO:output_type -> google.protobuf.Empty
	17, // 43: slo.SLO.CloneSLO:output_type -> slo.SLOData
	2,  // 44: slo.SLO.CloneToClusters:output_type -> slo.MultiClusterFailures
	22, // 45: slo.SLO.ListMetrics:output_type -> slo.MetricGroupList
	10, // 46: slo.SLO.ListServices:output_type -> slo.ServiceList
	6,  // 47: slo.SLO.ListEvents:output_type -> slo.EventList
	24, // 48: slo.SLO.Status:output_type -> slo.SLOStatus
	25, // 49: slo.SLO.Preview:output_type -> slo.SLOPreviewResponse
	38, // [38:50] is the sub-list for method output_type
	26, // [26:38] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_init() }
func file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_init() {
	if File_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDesc), len(file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_depIdxs,
		EnumInfos:         file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_enumTypes,
		MessageInfos:      file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto = out.File
	file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_goTypes = nil
	file_github_com_rancher_opni_plugins_slo_apis_slo_slo_proto_depIdxs = nil
}
