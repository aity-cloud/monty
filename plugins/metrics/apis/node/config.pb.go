// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/aity-cloud/monty/plugins/metrics/apis/node/config.proto

package node

import (
	validate "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/aity-cloud/monty/pkg/apis/core/v1"
	v1beta1 "github.com/aity-cloud/monty/pkg/config/v1beta1"
	driverutil "github.com/aity-cloud/monty/pkg/plugins/driverutil"
	_ "github.com/kralicky/codegen/cli"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigStatus int32

const (
	ConfigStatus_Unknown     ConfigStatus = 0
	ConfigStatus_UpToDate    ConfigStatus = 1
	ConfigStatus_NeedsUpdate ConfigStatus = 2
)

// Enum value maps for ConfigStatus.
var (
	ConfigStatus_name = map[int32]string{
		0: "Unknown",
		1: "UpToDate",
		2: "NeedsUpdate",
	}
	ConfigStatus_value = map[string]int32{
		"Unknown":     0,
		"UpToDate":    1,
		"NeedsUpdate": 2,
	}
)

func (x ConfigStatus) Enum() *ConfigStatus {
	p := new(ConfigStatus)
	*p = x
	return p
}

func (x ConfigStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_enumTypes[0].Descriptor()
}

func (ConfigStatus) Type() protoreflect.EnumType {
	return &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_enumTypes[0]
}

func (x ConfigStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigStatus.Descriptor instead.
func (ConfigStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{0}
}

type MetricsCapabilityConfig_Driver int32

const (
	MetricsCapabilityConfig_None          MetricsCapabilityConfig_Driver = 0
	MetricsCapabilityConfig_Prometheus    MetricsCapabilityConfig_Driver = 1
	MetricsCapabilityConfig_OpenTelemetry MetricsCapabilityConfig_Driver = 2
)

// Enum value maps for MetricsCapabilityConfig_Driver.
var (
	MetricsCapabilityConfig_Driver_name = map[int32]string{
		0: "None",
		1: "Prometheus",
		2: "OpenTelemetry",
	}
	MetricsCapabilityConfig_Driver_value = map[string]int32{
		"None":          0,
		"Prometheus":    1,
		"OpenTelemetry": 2,
	}
)

func (x MetricsCapabilityConfig_Driver) Enum() *MetricsCapabilityConfig_Driver {
	p := new(MetricsCapabilityConfig_Driver)
	*p = x
	return p
}

func (x MetricsCapabilityConfig_Driver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricsCapabilityConfig_Driver) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_enumTypes[1].Descriptor()
}

func (MetricsCapabilityConfig_Driver) Type() protoreflect.EnumType {
	return &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_enumTypes[1]
}

func (x MetricsCapabilityConfig_Driver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricsCapabilityConfig_Driver.Descriptor instead.
func (MetricsCapabilityConfig_Driver) EnumDescriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{1, 0}
}

// This message is strictly an implementation detail and used for sync request/response only.
// It is NOT persisted to the key-value store.
type MetricsCapabilityStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Note: this field is not used as part of an installable config type. It is
	// older and kept for compatibility purposes.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// If enabled is false, conditions may contain a list of relevant status
	// messages describing why the capability is disabled.
	Conditions    []string                 `protobuf:"bytes,2,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Spec          *MetricsCapabilityConfig `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsCapabilityStatus) Reset() {
	*x = MetricsCapabilityStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsCapabilityStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsCapabilityStatus) ProtoMessage() {}

func (x *MetricsCapabilityStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsCapabilityStatus.ProtoReflect.Descriptor instead.
func (*MetricsCapabilityStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{0}
}

func (x *MetricsCapabilityStatus) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MetricsCapabilityStatus) GetConditions() []string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *MetricsCapabilityStatus) GetSpec() *MetricsCapabilityConfig {
	if x != nil {
		return x.Spec
	}
	return nil
}

// This message is the persisted configuration for a single node, or the
// default configuration for all nodes.
type MetricsCapabilityConfig struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Revision      *v1.Revision                    `protobuf:"bytes,5,opt,name=revision,proto3" json:"revision,omitempty"`
	Rules         *v1beta1.RulesSpec              `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
	Driver        *MetricsCapabilityConfig_Driver `protobuf:"varint,4,opt,name=driver,proto3,enum=node.metrics.config.MetricsCapabilityConfig_Driver,oneof" json:"driver,omitempty"`
	Prometheus    *PrometheusSpec                 `protobuf:"bytes,2,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	Otel          *OTELSpec                       `protobuf:"bytes,3,opt,name=otel,proto3" json:"otel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsCapabilityConfig) Reset() {
	*x = MetricsCapabilityConfig{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsCapabilityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsCapabilityConfig) ProtoMessage() {}

func (x *MetricsCapabilityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsCapabilityConfig.ProtoReflect.Descriptor instead.
func (*MetricsCapabilityConfig) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{1}
}

func (x *MetricsCapabilityConfig) GetRevision() *v1.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *MetricsCapabilityConfig) GetRules() *v1beta1.RulesSpec {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *MetricsCapabilityConfig) GetDriver() MetricsCapabilityConfig_Driver {
	if x != nil && x.Driver != nil {
		return *x.Driver
	}
	return MetricsCapabilityConfig_None
}

func (x *MetricsCapabilityConfig) GetPrometheus() *PrometheusSpec {
	if x != nil {
		return x.Prometheus
	}
	return nil
}

func (x *MetricsCapabilityConfig) GetOtel() *OTELSpec {
	if x != nil {
		return x.Otel
	}
	return nil
}

type PrometheusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *string                `protobuf:"bytes,1,opt,name=image,proto3,oneof" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrometheusSpec) Reset() {
	*x = PrometheusSpec{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrometheusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusSpec) ProtoMessage() {}

func (x *PrometheusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusSpec.ProtoReflect.Descriptor instead.
func (*PrometheusSpec) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{2}
}

func (x *PrometheusSpec) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

type ScrapeConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	JobName        *string                `protobuf:"bytes,1,opt,name=jobName,proto3,oneof" json:"jobName,omitempty"`
	Targets        []string               `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	ScrapeInterval *string                `protobuf:"bytes,3,opt,name=scrapeInterval,proto3,oneof" json:"scrapeInterval,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScrapeConfig) Reset() {
	*x = ScrapeConfig{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScrapeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScrapeConfig) ProtoMessage() {}

func (x *ScrapeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScrapeConfig.ProtoReflect.Descriptor instead.
func (*ScrapeConfig) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{3}
}

func (x *ScrapeConfig) GetJobName() string {
	if x != nil && x.JobName != nil {
		return *x.JobName
	}
	return ""
}

func (x *ScrapeConfig) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ScrapeConfig) GetScrapeInterval() string {
	if x != nil && x.ScrapeInterval != nil {
		return *x.ScrapeInterval
	}
	return ""
}

type OTELSpec struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	AdditionalScrapeConfigs []*ScrapeConfig        `protobuf:"bytes,1,rep,name=additionalScrapeConfigs,proto3" json:"additionalScrapeConfigs,omitempty"`
	Wal                     *WALConfig             `protobuf:"bytes,2,opt,name=wal,proto3" json:"wal,omitempty"`
	HostMetrics             *bool                  `protobuf:"varint,3,opt,name=hostMetrics,proto3,oneof" json:"hostMetrics,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *OTELSpec) Reset() {
	*x = OTELSpec{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OTELSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTELSpec) ProtoMessage() {}

func (x *OTELSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTELSpec.ProtoReflect.Descriptor instead.
func (*OTELSpec) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{4}
}

func (x *OTELSpec) GetAdditionalScrapeConfigs() []*ScrapeConfig {
	if x != nil {
		return x.AdditionalScrapeConfigs
	}
	return nil
}

func (x *OTELSpec) GetWal() *WALConfig {
	if x != nil {
		return x.Wal
	}
	return nil
}

func (x *OTELSpec) GetHostMetrics() bool {
	if x != nil && x.HostMetrics != nil {
		return *x.HostMetrics
	}
	return false
}

type WALConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Enabled           *bool                  `protobuf:"varint,1,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	BufferSize        *int64                 `protobuf:"varint,2,opt,name=bufferSize,proto3,oneof" json:"bufferSize,omitempty"`
	TruncateFrequency *durationpb.Duration   `protobuf:"bytes,3,opt,name=truncateFrequency,proto3" json:"truncateFrequency,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *WALConfig) Reset() {
	*x = WALConfig{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WALConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALConfig) ProtoMessage() {}

func (x *WALConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALConfig.ProtoReflect.Descriptor instead.
func (*WALConfig) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{5}
}

func (x *WALConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *WALConfig) GetBufferSize() int64 {
	if x != nil && x.BufferSize != nil {
		return *x.BufferSize
	}
	return 0
}

func (x *WALConfig) GetTruncateFrequency() *durationpb.Duration {
	if x != nil {
		return x.TruncateFrequency
	}
	return nil
}

type ConfigurationHistoryResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Entries       []*MetricsCapabilityConfig `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationHistoryResponse) Reset() {
	*x = ConfigurationHistoryResponse{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationHistoryResponse) ProtoMessage() {}

func (x *ConfigurationHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationHistoryResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationHistoryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigurationHistoryResponse) GetEntries() []*MetricsCapabilityConfig {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ResetRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Node          *v1.Reference            `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Only used for active config requests
	Revision      *v1.Revision             `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	Mask          *fieldmaskpb.FieldMask   `protobuf:"bytes,3,opt,name=mask,proto3" json:"mask,omitempty"`
	Patch         *MetricsCapabilityConfig `protobuf:"bytes,4,opt,name=patch,proto3" json:"patch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{7}
}

func (x *ResetRequest) GetNode() *v1.Reference {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ResetRequest) GetRevision() *v1.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *ResetRequest) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *ResetRequest) GetPatch() *MetricsCapabilityConfig {
	if x != nil {
		return x.Patch
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *v1.Reference          `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Only used for active config requests
	Revision      *v1.Revision           `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{8}
}

func (x *GetRequest) GetNode() *v1.Reference {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *GetRequest) GetRevision() *v1.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

type SetRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Node          *v1.Reference            `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Only used for active config requests
	Spec          *MetricsCapabilityConfig `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{9}
}

func (x *SetRequest) GetNode() *v1.Reference {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *SetRequest) GetSpec() *MetricsCapabilityConfig {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DryRunRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Node          *v1.Reference            `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Only used for active config requests
	Target        driverutil.Target        `protobuf:"varint,2,opt,name=target,proto3,enum=driverutil.Target" json:"target,omitempty"`
	Action        driverutil.Action        `protobuf:"varint,3,opt,name=action,proto3,enum=driverutil.Action" json:"action,omitempty"`
	Spec          *MetricsCapabilityConfig `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`         // Set
	Revision      *v1.Revision             `protobuf:"bytes,5,opt,name=revision,proto3" json:"revision,omitempty"` // Reset
	Patch         *MetricsCapabilityConfig `protobuf:"bytes,6,opt,name=patch,proto3" json:"patch,omitempty"`       // Reset
	Mask          *fieldmaskpb.FieldMask   `protobuf:"bytes,7,opt,name=mask,proto3" json:"mask,omitempty"`         // Reset
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DryRunRequest) Reset() {
	*x = DryRunRequest{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunRequest) ProtoMessage() {}

func (x *DryRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunRequest.ProtoReflect.Descriptor instead.
func (*DryRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{10}
}

func (x *DryRunRequest) GetNode() *v1.Reference {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *DryRunRequest) GetTarget() driverutil.Target {
	if x != nil {
		return x.Target
	}
	return driverutil.Target(0)
}

func (x *DryRunRequest) GetAction() driverutil.Action {
	if x != nil {
		return x.Action
	}
	return driverutil.Action(0)
}

func (x *DryRunRequest) GetSpec() *MetricsCapabilityConfig {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *DryRunRequest) GetRevision() *v1.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *DryRunRequest) GetPatch() *MetricsCapabilityConfig {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *DryRunRequest) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type DryRunResponse struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	Current          *MetricsCapabilityConfig `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Modified         *MetricsCapabilityConfig `protobuf:"bytes,2,opt,name=modified,proto3" json:"modified,omitempty"`
	ValidationErrors *validate.Violations     `protobuf:"bytes,3,opt,name=validationErrors,proto3" json:"validationErrors,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DryRunResponse) Reset() {
	*x = DryRunResponse{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunResponse) ProtoMessage() {}

func (x *DryRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunResponse.ProtoReflect.Descriptor instead.
func (*DryRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{11}
}

func (x *DryRunResponse) GetCurrent() *MetricsCapabilityConfig {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *DryRunResponse) GetModified() *MetricsCapabilityConfig {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *DryRunResponse) GetValidationErrors() *validate.Violations {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

type ConfigurationHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *v1.Reference          `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Only used for active config requests
	Target        driverutil.Target      `protobuf:"varint,2,opt,name=target,proto3,enum=driverutil.Target" json:"target,omitempty"`
	Revision      *v1.Revision           `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
	IncludeValues bool                   `protobuf:"varint,4,opt,name=includeValues,proto3" json:"includeValues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationHistoryRequest) Reset() {
	*x = ConfigurationHistoryRequest{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationHistoryRequest) ProtoMessage() {}

func (x *ConfigurationHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationHistoryRequest.ProtoReflect.Descriptor instead.
func (*ConfigurationHistoryRequest) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigurationHistoryRequest) GetNode() *v1.Reference {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ConfigurationHistoryRequest) GetTarget() driverutil.Target {
	if x != nil {
		return x.Target
	}
	return driverutil.Target(0)
}

func (x *ConfigurationHistoryRequest) GetRevision() *v1.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *ConfigurationHistoryRequest) GetIncludeValues() bool {
	if x != nil {
		return x.IncludeValues
	}
	return false
}

var File_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto protoreflect.FileDescriptor

const file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDesc = "" +
	"\n" +
	"Bgithub.com/aity-cloud/monty/plugins/metrics/apis/node/config.proto\x12\x13node.metrics.config\x1a\x1bbuf/validate/validate.proto\x1a)github.com/kralicky/codegen/cli/cli.proto\x1a7github.com/aity-cloud/monty/pkg/apis/core/v1/core.proto\x1aAgithub.com/aity-cloud/monty/pkg/config/v1beta1/agent_config.proto\x1a>github.com/aity-cloud/monty/pkg/plugins/driverutil/types.proto\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/descriptor.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\"\x95\x01\n" +
	"\x17MetricsCapabilityStatus\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1e\n" +
	"\n" +
	"conditions\x18\x02 \x03(\tR\n" +
	"conditions\x12@\n" +
	"\x04spec\x18\x03 \x01(\v2,.node.metrics.config.MetricsCapabilityConfigR\x04spec\"\xd2\x03\n" +
	"\x17MetricsCapabilityConfig\x12*\n" +
	"\brevision\x18\x05 \x01(\v2\x0e.core.RevisionR\brevision\x12m\n" +
	"\x05rules\x18\x01 \x01(\v2\x19.config.v1beta1.RulesSpecB<\x92\xc0\f8\n" +
	"6\n" +
	",type.googleapis.com/config.v1beta1.RulesSpec\x12\x06\n" +
	"\x04\n" +
	"\x02\n" +
	"\x00R\x05rules\x12b\n" +
	"\x06driver\x18\x04 \x01(\x0e23.node.metrics.config.MetricsCapabilityConfig.DriverB\x10\x8a\xc0\f\f\n" +
	"\n" +
	"PrometheusH\x00R\x06driver\x88\x01\x01\x12C\n" +
	"\n" +
	"prometheus\x18\x02 \x01(\v2#.node.metrics.config.PrometheusSpecR\n" +
	"prometheus\x121\n" +
	"\x04otel\x18\x03 \x01(\v2\x1d.node.metrics.config.OTELSpecR\x04otel\"5\n" +
	"\x06Driver\x12\b\n" +
	"\x04None\x10\x00\x12\x0e\n" +
	"\n" +
	"Prometheus\x10\x01\x12\x11\n" +
	"\rOpenTelemetry\x10\x02B\t\n" +
	"\a_driver\"\x97\x01\n" +
	"\x0ePrometheusSpec\x12u\n" +
	"\x05image\x18\x01 \x01(\tBZ\xbaH-\xba\x01*\n" +
	"\x10prometheus_image\x1a\x16this.isValidImageRef()\x8a\xc0\f&\n" +
	"$quay.io/prometheus/prometheus:latestH\x00R\x05image\x88\x01\x01B\b\n" +
	"\x06_imageJ\x04\b\x02\x10\x03\"\x9b\x02\n" +
	"\fScrapeConfig\x12%\n" +
	"\ajobName\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01H\x00R\ajobName\x88\x01\x01\x12$\n" +
	"\atargets\x18\x02 \x03(\tB\n" +
	"\xbaH\a\x92\x01\x04\b\x01\x18\x01R\atargets\x12\x9e\x01\n" +
	"\x0escrapeInterval\x18\x03 \x01(\tBq\xbaHn\xba\x01h\n" +
	"\x18scrape_interval_duration\x12 invalid scrape interval duration\x1a*prometheusDuration(this) >= duration('1s')\xc8\x01\x01H\x01R\x0escrapeInterval\x88\x01\x01B\n" +
	"\n" +
	"\b_jobNameB\x11\n" +
	"\x0f_scrapeInterval\"\xd0\x01\n" +
	"\bOTELSpec\x12[\n" +
	"\x17additionalScrapeConfigs\x18\x01 \x03(\v2!.node.metrics.config.ScrapeConfigR\x17additionalScrapeConfigs\x120\n" +
	"\x03wal\x18\x02 \x01(\v2\x1e.node.metrics.config.WALConfigR\x03wal\x12%\n" +
	"\vhostMetrics\x18\x03 \x01(\bH\x00R\vhostMetrics\x88\x01\x01B\x0e\n" +
	"\f_hostMetrics\"\xcc\x01\n" +
	"\tWALConfig\x12\x1d\n" +
	"\aenabled\x18\x01 \x01(\bH\x00R\aenabled\x88\x01\x01\x12/\n" +
	"\n" +
	"bufferSize\x18\x02 \x01(\x03B\n" +
	"\xbaH\a\xc8\x01\x01\"\x02 \x00H\x01R\n" +
	"bufferSize\x88\x01\x01\x12T\n" +
	"\x11truncateFrequency\x18\x03 \x01(\v2\x19.google.protobuf.DurationB\v\xbaH\b\xc8\x01\x01\xaa\x01\x02*\x00R\x11truncateFrequencyB\n" +
	"\n" +
	"\b_enabledB\r\n" +
	"\v_bufferSize\"f\n" +
	"\x1cConfigurationHistoryResponse\x12F\n" +
	"\aentries\x18\x01 \x03(\v2,.node.metrics.config.MetricsCapabilityConfigR\aentries\"\xeb\x01\n" +
	"\fResetRequest\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.core.ReferenceR\x04node\x122\n" +
	"\brevision\x18\x02 \x01(\v2\x0e.core.RevisionB\x06\x92\xc0\f\x02\x10\x01R\brevision\x126\n" +
	"\x04mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskB\x06\x8a\xc0\f\x02(\x01R\x04mask\x12J\n" +
	"\x05patch\x18\x04 \x01(\v2,.node.metrics.config.MetricsCapabilityConfigB\x06\x8a\xc0\f\x02(\x01R\x05patch\"]\n" +
	"\n" +
	"GetRequest\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.core.ReferenceR\x04node\x12*\n" +
	"\brevision\x18\x02 \x01(\v2\x0e.core.RevisionR\brevision\"s\n" +
	"\n" +
	"SetRequest\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.core.ReferenceR\x04node\x12@\n" +
	"\x04spec\x18\x02 \x01(\v2,.node.metrics.config.MetricsCapabilityConfigR\x04spec\"\x86\x03\n" +
	"\rDryRunRequest\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.core.ReferenceR\x04node\x12*\n" +
	"\x06target\x18\x02 \x01(\x0e2\x12.driverutil.TargetR\x06target\x12*\n" +
	"\x06action\x18\x03 \x01(\x0e2\x12.driverutil.ActionR\x06action\x12@\n" +
	"\x04spec\x18\x04 \x01(\v2,.node.metrics.config.MetricsCapabilityConfigR\x04spec\x122\n" +
	"\brevision\x18\x05 \x01(\v2\x0e.core.RevisionB\x06\x92\xc0\f\x02\x10\x01R\brevision\x12J\n" +
	"\x05patch\x18\x06 \x01(\v2,.node.metrics.config.MetricsCapabilityConfigB\x06\x8a\xc0\f\x02(\x01R\x05patch\x126\n" +
	"\x04mask\x18\a \x01(\v2\x1a.google.protobuf.FieldMaskB\x06\x8a\xc0\f\x02(\x01R\x04mask\"\xe8\x01\n" +
	"\x0eDryRunResponse\x12F\n" +
	"\acurrent\x18\x01 \x01(\v2,.node.metrics.config.MetricsCapabilityConfigR\acurrent\x12H\n" +
	"\bmodified\x18\x02 \x01(\v2,.node.metrics.config.MetricsCapabilityConfigR\bmodified\x12D\n" +
	"\x10validationErrors\x18\x03 \x01(\v2\x18.buf.validate.ViolationsR\x10validationErrors\"\xd4\x01\n" +
	"\x1bConfigurationHistoryRequest\x12#\n" +
	"\x04node\x18\x01 \x01(\v2\x0f.core.ReferenceR\x04node\x12*\n" +
	"\x06target\x18\x02 \x01(\x0e2\x12.driverutil.TargetR\x06target\x122\n" +
	"\brevision\x18\x03 \x01(\v2\x0e.core.RevisionB\x06\x92\xc0\f\x02\x10\x01R\brevision\x120\n" +
	"\rincludeValues\x18\x04 \x01(\bB\n" +
	"\x8a\xc0\f\x06\n" +
	"\x04trueR\rincludeValues*:\n" +
	"\fConfigStatus\x12\v\n" +
	"\aUnknown\x10\x00\x12\f\n" +
	"\bUpToDate\x10\x01\x12\x0f\n" +
	"\vNeedsUpdate\x10\x022\x82\t\n" +
	"\x11NodeConfiguration\x12\x95\x01\n" +
	"\x17GetDefaultConfiguration\x12\x1f.node.metrics.config.GetRequest\x1a,.node.metrics.config.MetricsCapabilityConfig\"+\x82\xc0\f\x13\x8a\xc0\f\vget-default\xa8\xc0\f\x01\x82\xd3\xe4\x93\x02\x0e\x12\f/node_config\x12\x82\x01\n" +
	"\x17SetDefaultConfiguration\x12\x1f.node.metrics.config.SetRequest\x1a\x16.google.protobuf.Empty\".\x82\xc0\f\x13\x8a\xc0\f\vset-default\xb0\xc0\f\x01\x82\xd3\xe4\x93\x02\x11:\x01*\x1a\f/node_config\x12|\n" +
	"\x19ResetDefaultConfiguration\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"/\x82\xc0\f\x11\x8a\xc0\f\rreset-default\x82\xd3\xe4\x93\x02\x14\"\x12/node_config/reset\x12\x90\x01\n" +
	"\x10GetConfiguration\x12\x1f.node.metrics.config.GetRequest\x1a,.node.metrics.config.MetricsCapabilityConfig\"-\x82\xc0\f\v\x8a\xc0\f\x03get\xa8\xc0\f\x01\x82\xd3\xe4\x93\x02\x18\x12\x16/node_config/{node.id}\x12\x81\x01\n" +
	"\x10SetConfiguration\x12\x1f.node.metrics.config.SetRequest\x1a\x16.google.protobuf.Empty\"4\x82\xc0\f\x0f\x8a\xc0\f\x03set\xa8\xc0\f\x01\xb0\xc0\f\x01\x82\xd3\xe4\x93\x02\x1b:\x01*\x1a\x16/node_config/{node.id}\x12\x85\x01\n" +
	"\x12ResetConfiguration\x12!.node.metrics.config.ResetRequest\x1a\x16.google.protobuf.Empty\"4\x82\xc0\f\t\x8a\xc0\f\x05reset\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/node_config/{node.id}/reset\x12n\n" +
	"\x06DryRun\x12\".node.metrics.config.DryRunRequest\x1a#.node.metrics.config.DryRunResponse\"\x1b\x82\xc0\f\x04\xa0\xc0\f\x01\x82\xd3\xe4\x93\x02\r:\x01*\"\b/dry-run\x12\xb2\x01\n" +
	"\x14ConfigurationHistory\x120.node.metrics.config.ConfigurationHistoryRequest\x1a1.node.metrics.config.ConfigurationHistoryResponse\"5\x82\xc0\f\v\x8a\xc0\f\ahistory\x82\xd3\xe4\x93\x02 \x12\x1e/node_config/{node.id}/history\x1a\x0e\x82\xc0\f\n" +
	"\x8a\xc0\f\x06configB=\x82\xc0\f\x02\b\x01Z5github.com/aity-cloud/monty/plugins/metrics/apis/nodeb\x06proto3"

var (
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescOnce sync.Once
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescData []byte
)

func file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescGZIP() []byte {
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescOnce.Do(func() {
		file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDesc), len(file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDesc)))
	})
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDescData
}

var file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_goTypes = []any{
	(ConfigStatus)(0),                    // 0: node.metrics.config.ConfigStatus
	(MetricsCapabilityConfig_Driver)(0),  // 1: node.metrics.config.MetricsCapabilityConfig.Driver
	(*MetricsCapabilityStatus)(nil),      // 2: node.metrics.config.MetricsCapabilityStatus
	(*MetricsCapabilityConfig)(nil),      // 3: node.metrics.config.MetricsCapabilityConfig
	(*PrometheusSpec)(nil),               // 4: node.metrics.config.PrometheusSpec
	(*ScrapeConfig)(nil),                 // 5: node.metrics.config.ScrapeConfig
	(*OTELSpec)(nil),                     // 6: node.metrics.config.OTELSpec
	(*WALConfig)(nil),                    // 7: node.metrics.config.WALConfig
	(*ConfigurationHistoryResponse)(nil), // 8: node.metrics.config.ConfigurationHistoryResponse
	(*ResetRequest)(nil),                 // 9: node.metrics.config.ResetRequest
	(*GetRequest)(nil),                   // 10: node.metrics.config.GetRequest
	(*SetRequest)(nil),                   // 11: node.metrics.config.SetRequest
	(*DryRunRequest)(nil),                // 12: node.metrics.config.DryRunRequest
	(*DryRunResponse)(nil),               // 13: node.metrics.config.DryRunResponse
	(*ConfigurationHistoryRequest)(nil),  // 14: node.metrics.config.ConfigurationHistoryRequest
	(*v1.Revision)(nil),                  // 15: core.Revision
	(*v1beta1.RulesSpec)(nil),            // 16: config.v1beta1.RulesSpec
	(*durationpb.Duration)(nil),          // 17: google.protobuf.Duration
	(*v1.Reference)(nil),                 // 18: core.Reference
	(*fieldmaskpb.FieldMask)(nil),        // 19: google.protobuf.FieldMask
	(driverutil.Target)(0),               // 20: driverutil.Target
	(driverutil.Action)(0),               // 21: driverutil.Action
	(*validate.Violations)(nil),          // 22: buf.validate.Violations
	(*emptypb.Empty)(nil),                // 23: google.protobuf.Empty
}
var file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_depIdxs = []int32{
	3,  // 0: node.metrics.config.MetricsCapabilityStatus.spec:type_name -> node.metrics.config.MetricsCapabilityConfig
	15, // 1: node.metrics.config.MetricsCapabilityConfig.revision:type_name -> core.Revision
	16, // 2: node.metrics.config.MetricsCapabilityConfig.rules:type_name -> config.v1beta1.RulesSpec
	1,  // 3: node.metrics.config.MetricsCapabilityConfig.driver:type_name -> node.metrics.config.MetricsCapabilityConfig.Driver
	4,  // 4: node.metrics.config.MetricsCapabilityConfig.prometheus:type_name -> node.metrics.config.PrometheusSpec
	6,  // 5: node.metrics.config.MetricsCapabilityConfig.otel:type_name -> node.metrics.config.OTELSpec
	5,  // 6: node.metrics.config.OTELSpec.additionalScrapeConfigs:type_name -> node.metrics.config.ScrapeConfig
	7,  // 7: node.metrics.config.OTELSpec.wal:type_name -> node.metrics.config.WALConfig
	17, // 8: node.metrics.config.WALConfig.truncateFrequency:type_name -> google.protobuf.Duration
	3,  // 9: node.metrics.config.ConfigurationHistoryResponse.entries:type_name -> node.metrics.config.MetricsCapabilityConfig
	18, // 10: node.metrics.config.ResetRequest.node:type_name -> core.Reference
	15, // 11: node.metrics.config.ResetRequest.revision:type_name -> core.Revision
	19, // 12: node.metrics.config.ResetRequest.mask:type_name -> google.protobuf.FieldMask
	3,  // 13: node.metrics.config.ResetRequest.patch:type_name -> node.metrics.config.MetricsCapabilityConfig
	18, // 14: node.metrics.config.GetRequest.node:type_name -> core.Reference
	15, // 15: node.metrics.config.GetRequest.revision:type_name -> core.Revision
	18, // 16: node.metrics.config.SetRequest.node:type_name -> core.Reference
	3,  // 17: node.metrics.config.SetRequest.spec:type_name -> node.metrics.config.MetricsCapabilityConfig
	18, // 18: node.metrics.config.DryRunRequest.node:type_name -> core.Reference
	20, // 19: node.metrics.config.DryRunRequest.target:type_name -> driverutil.Target
	21, // 20: node.metrics.config.DryRunRequest.action:type_name -> driverutil.Action
	3,  // 21: node.metrics.config.DryRunRequest.spec:type_name -> node.metrics.config.MetricsCapabilityConfig
	15, // 22: node.metrics.config.DryRunRequest.revision:type_name -> core.Revision
	3,  // 23: node.metrics.config.DryRunRequest.patch:type_name -> node.metrics.config.MetricsCapabilityConfig
	19, // 24: node.metrics.config.DryRunRequest.mask:type_name -> google.protobuf.FieldMask
	3,  // 25: node.metrics.config.DryRunResponse.current:type_name -> node.metrics.config.MetricsCapabilityConfig
	3,  // 26: node.metrics.config.DryRunResponse.modified:type_name -> node.metrics.config.MetricsCapabilityConfig
	22, // 27: node.metrics.config.DryRunResponse.validationErrors:type_name -> buf.validate.Violations
	18, // 28: node.metrics.config.ConfigurationHistoryRequest.node:type_name -> core.Reference
	20, // 29: node.metrics.config.ConfigurationHistoryRequest.target:type_name -> driverutil.Target
	15, // 30: node.metrics.config.ConfigurationHistoryRequest.revision:type_name -> core.Revision
	10, // 31: node.metrics.config.NodeConfiguration.GetDefaultConfiguration:input_type -> node.metrics.config.GetRequest
	11, // 32: node.metrics.config.NodeConfiguration.SetDefaultConfiguration:input_type -> node.metrics.config.SetRequest
	23, // 33: node.metrics.config.NodeConfiguration.ResetDefaultConfiguration:input_type -> google.protobuf.Empty
	10, // 34: node.metrics.config.NodeConfiguration.GetConfiguration:input_type -> node.metrics.config.GetRequest
	11, // 35: node.metrics.config.NodeConfiguration.SetConfiguration:input_type -> node.metrics.config.SetRequest
	9,  // 36: node.metrics.config.NodeConfiguration.ResetConfiguration:input_type -> node.metrics.config.ResetRequest
	12, // 37: node.metrics.config.NodeConfiguration.DryRun:input_type -> node.metrics.config.DryRunRequest
	14, // 38: node.metrics.config.NodeConfiguration.ConfigurationHistory:input_type -> node.metrics.config.ConfigurationHistoryRequest
	3,  // 39: node.metrics.config.NodeConfiguration.GetDefaultConfiguration:output_type -> node.metrics.config.MetricsCapabilityConfig
	23, // 40: node.metrics.config.NodeConfiguration.SetDefaultConfiguration:output_type -> google.protobuf.Empty
	23, // 41: node.metrics.config.NodeConfiguration.ResetDefaultConfiguration:output_type -> google.protobuf.Empty
	3,  // 42: node.metrics.config.NodeConfiguration.GetConfiguration:output_type -> node.metrics.config.MetricsCapabilityConfig
	23, // 43: node.metrics.config.NodeConfiguration.SetConfiguration:output_type -> google.protobuf.Empty
	23, // 44: node.metrics.config.NodeConfiguration.ResetConfiguration:output_type -> google.protobuf.Empty
	13, // 45: node.metrics.config.NodeConfiguration.DryRun:output_type -> node.metrics.config.DryRunResponse
	8,  // 46: node.metrics.config.NodeConfiguration.ConfigurationHistory:output_type -> node.metrics.config.ConfigurationHistoryResponse
	39, // [39:47] is the sub-list for method output_type
	31, // [31:39] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_init() }
func file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_init() {
	if File_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto != nil {
		return
	}
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[1].OneofWrappers = []any{}
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[2].OneofWrappers = []any{}
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[3].OneofWrappers = []any{}
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[4].OneofWrappers = []any{}
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDesc), len(file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_goTypes,
		DependencyIndexes: file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_depIdxs,
		EnumInfos:         file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_enumTypes,
		MessageInfos:      file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_msgTypes,
	}.Build()
	File_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto = out.File
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_goTypes = nil
	file_github_com_aity_cloud_monty_plugins_metrics_apis_node_config_proto_depIdxs = nil
}
