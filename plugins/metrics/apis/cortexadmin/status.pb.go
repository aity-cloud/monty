// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/aity-cloud/monty/plugins/metrics/apis/cortexadmin/status.proto

package cortexadmin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CortexStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Distributor   *DistributorStatus     `protobuf:"bytes,1,opt,name=distributor,proto3" json:"distributor,omitempty"`
	Ingester      *IngesterStatus        `protobuf:"bytes,2,opt,name=ingester,proto3" json:"ingester,omitempty"`
	Ruler         *RulerStatus           `protobuf:"bytes,3,opt,name=ruler,proto3" json:"ruler,omitempty"`
	Purger        *PurgerStatus          `protobuf:"bytes,4,opt,name=purger,proto3" json:"purger,omitempty"`
	Compactor     *CompactorStatus       `protobuf:"bytes,5,opt,name=compactor,proto3" json:"compactor,omitempty"`
	StoreGateway  *StoreGatewayStatus    `protobuf:"bytes,6,opt,name=storeGateway,proto3" json:"storeGateway,omitempty"`
	QueryFrontend *QueryFrontendStatus   `protobuf:"bytes,7,opt,name=queryFrontend,proto3" json:"queryFrontend,omitempty"`
	Querier       *QuerierStatus         `protobuf:"bytes,8,opt,name=querier,proto3" json:"querier,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CortexStatus) Reset() {
	*x = CortexStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CortexStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CortexStatus) ProtoMessage() {}

func (x *CortexStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CortexStatus.ProtoReflect.Descriptor instead.
func (*CortexStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{0}
}

func (x *CortexStatus) GetDistributor() *DistributorStatus {
	if x != nil {
		return x.Distributor
	}
	return nil
}

func (x *CortexStatus) GetIngester() *IngesterStatus {
	if x != nil {
		return x.Ingester
	}
	return nil
}

func (x *CortexStatus) GetRuler() *RulerStatus {
	if x != nil {
		return x.Ruler
	}
	return nil
}

func (x *CortexStatus) GetPurger() *PurgerStatus {
	if x != nil {
		return x.Purger
	}
	return nil
}

func (x *CortexStatus) GetCompactor() *CompactorStatus {
	if x != nil {
		return x.Compactor
	}
	return nil
}

func (x *CortexStatus) GetStoreGateway() *StoreGatewayStatus {
	if x != nil {
		return x.StoreGateway
	}
	return nil
}

func (x *CortexStatus) GetQueryFrontend() *QueryFrontendStatus {
	if x != nil {
		return x.QueryFrontend
	}
	return nil
}

func (x *CortexStatus) GetQuerier() *QuerierStatus {
	if x != nil {
		return x.Querier
	}
	return nil
}

func (x *CortexStatus) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Status of an individual cortex service (module)
type ServiceStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceStatus) Reset() {
	*x = ServiceStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatus) ProtoMessage() {}

func (x *ServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatus.ProtoReflect.Descriptor instead.
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ServiceStatusList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []*ServiceStatus       `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"` // field name matches cortex
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceStatusList) Reset() {
	*x = ServiceStatusList{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatusList) ProtoMessage() {}

func (x *ServiceStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatusList.ProtoReflect.Descriptor instead.
func (*ServiceStatusList) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceStatusList) GetServices() []*ServiceStatus {
	if x != nil {
		return x.Services
	}
	return nil
}

// Status of a single shard in a ring
type ShardStatus struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State               string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Address             string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Timestamp           string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RegisteredTimestamp string                 `protobuf:"bytes,5,opt,name=registeredTimestamp,proto3" json:"registeredTimestamp,omitempty"`
	Zone                string                 `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ShardStatus) Reset() {
	*x = ShardStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardStatus) ProtoMessage() {}

func (x *ShardStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardStatus.ProtoReflect.Descriptor instead.
func (*ShardStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{3}
}

func (x *ShardStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShardStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ShardStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ShardStatus) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ShardStatus) GetRegisteredTimestamp() string {
	if x != nil {
		return x.RegisteredTimestamp
	}
	return ""
}

func (x *ShardStatus) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type ShardStatusList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shards        []*ShardStatus         `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"` // field name matches cortex
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardStatusList) Reset() {
	*x = ShardStatusList{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardStatusList) ProtoMessage() {}

func (x *ShardStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardStatusList.ProtoReflect.Descriptor instead.
func (*ShardStatusList) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{4}
}

func (x *ShardStatusList) GetShards() []*ShardStatus {
	if x != nil {
		return x.Shards
	}
	return nil
}

// Status of a single member of a memberlist
type MemberStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	State         int32                  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemberStatus) Reset() {
	*x = MemberStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStatus) ProtoMessage() {}

func (x *MemberStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStatus.ProtoReflect.Descriptor instead.
func (*MemberStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{5}
}

func (x *MemberStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberStatus) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MemberStatus) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *MemberStatus) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type MemberStatusList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*MemberStatus        `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemberStatusList) Reset() {
	*x = MemberStatusList{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStatusList) ProtoMessage() {}

func (x *MemberStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStatusList.ProtoReflect.Descriptor instead.
func (*MemberStatusList) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{6}
}

func (x *MemberStatusList) GetItems() []*MemberStatus {
	if x != nil {
		return x.Items
	}
	return nil
}

type MemberlistStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the service is currently using a memberlist
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The status of each member in the memberlist
	Members *MemberStatusList `protobuf:"bytes,2,opt,name=members,proto3" json:"members,omitempty"`
	// A list of keys in the key-value store used by the memberlist
	Keys          []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemberlistStatus) Reset() {
	*x = MemberlistStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberlistStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberlistStatus) ProtoMessage() {}

func (x *MemberlistStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberlistStatus.ProtoReflect.Descriptor instead.
func (*MemberlistStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{7}
}

func (x *MemberlistStatus) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MemberlistStatus) GetMembers() *MemberStatusList {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *MemberlistStatus) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RingStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Shards        *ShardStatusList       `protobuf:"bytes,2,opt,name=shards,proto3" json:"shards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RingStatus) Reset() {
	*x = RingStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingStatus) ProtoMessage() {}

func (x *RingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingStatus.ProtoReflect.Descriptor instead.
func (*RingStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{8}
}

func (x *RingStatus) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RingStatus) GetShards() *ShardStatusList {
	if x != nil {
		return x.Shards
	}
	return nil
}

type DistributorStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      *ServiceStatusList     `protobuf:"bytes,1,opt,name=services,proto3" json:"services,omitempty"`
	IngesterRing  *RingStatus            `protobuf:"bytes,2,opt,name=ingesterRing,proto3" json:"ingesterRing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DistributorStatus) Reset() {
	*x = DistributorStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistributorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributorStatus) ProtoMessage() {}

func (x *DistributorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributorStatus.ProtoReflect.Descriptor instead.
func (*DistributorStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{9}
}

func (x *DistributorStatus) GetServices() *ServiceStatusList {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *DistributorStatus) GetIngesterRing() *RingStatus {
	if x != nil {
		return x.IngesterRing
	}
	return nil
}

type IngesterStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      *ServiceStatusList     `protobuf:"bytes,1,opt,name=services,proto3" json:"services,omitempty"`
	Memberlist    *MemberlistStatus      `protobuf:"bytes,2,opt,name=memberlist,proto3" json:"memberlist,omitempty"`
	Ring          *RingStatus            `protobuf:"bytes,3,opt,name=ring,proto3" json:"ring,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngesterStatus) Reset() {
	*x = IngesterStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngesterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngesterStatus) ProtoMessage() {}

func (x *IngesterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngesterStatus.ProtoReflect.Descriptor instead.
func (*IngesterStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{10}
}

func (x *IngesterStatus) GetServices() *ServiceStatusList {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *IngesterStatus) GetMemberlist() *MemberlistStatus {
	if x != nil {
		return x.Memberlist
	}
	return nil
}

func (x *IngesterStatus) GetRing() *RingStatus {
	if x != nil {
		return x.Ring
	}
	return nil
}

type RulerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      *ServiceStatusList     `protobuf:"bytes,1,opt,name=services,proto3" json:"services,omitempty"`
	Memberlist    *MemberlistStatus      `protobuf:"bytes,2,opt,name=memberlist,proto3" json:"memberlist,omitempty"`
	Ring          *RingStatus            `protobuf:"bytes,3,opt,name=ring,proto3" json:"ring,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RulerStatus) Reset() {
	*x = RulerStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RulerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RulerStatus) ProtoMessage() {}

func (x *RulerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RulerStatus.ProtoReflect.Descriptor instead.
func (*RulerStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{11}
}

func (x *RulerStatus) GetServices() *ServiceStatusList {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *RulerStatus) GetMemberlist() *MemberlistStatus {
	if x != nil {
		return x.Memberlist
	}
	return nil
}

func (x *RulerStatus) GetRing() *RingStatus {
	if x != nil {
		return x.Ring
	}
	return nil
}

type PurgerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      *ServiceStatusList     `protobuf:"bytes,1,opt,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgerStatus) Reset() {
	*x = PurgerStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgerStatus) ProtoMessage() {}

func (x *PurgerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgerStatus.ProtoReflect.Descriptor instead.
func (*PurgerStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{12}
}

func (x *PurgerStatus) GetServices() *ServiceStatusList {
	if x != nil {
		return x.Services
	}
	return nil
}

type CompactorStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      *ServiceStatusList     `protobuf:"bytes,1,opt,name=services,proto3" json:"services,omitempty"`
	Memberlist    *MemberlistStatus      `protobuf:"bytes,2,opt,name=memberlist,proto3" json:"memberlist,omitempty"`
	Ring          *RingStatus            `protobuf:"bytes,3,opt,name=ring,proto3" json:"ring,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompactorStatus) Reset() {
	*x = CompactorStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompactorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactorStatus) ProtoMessage() {}

func (x *CompactorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactorStatus.ProtoReflect.Descriptor instead.
func (*CompactorStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{13}
}

func (x *CompactorStatus) GetServices() *ServiceStatusList {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *CompactorStatus) GetMemberlist() *MemberlistStatus {
	if x != nil {
		return x.Memberlist
	}
	return nil
}

func (x *CompactorStatus) GetRing() *RingStatus {
	if x != nil {
		return x.Ring
	}
	return nil
}

type StoreGatewayStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      *ServiceStatusList     `protobuf:"bytes,1,opt,name=services,proto3" json:"services,omitempty"`
	Memberlist    *MemberlistStatus      `protobuf:"bytes,2,opt,name=memberlist,proto3" json:"memberlist,omitempty"`
	Ring          *RingStatus            `protobuf:"bytes,3,opt,name=ring,proto3" json:"ring,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreGatewayStatus) Reset() {
	*x = StoreGatewayStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreGatewayStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreGatewayStatus) ProtoMessage() {}

func (x *StoreGatewayStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreGatewayStatus.ProtoReflect.Descriptor instead.
func (*StoreGatewayStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{14}
}

func (x *StoreGatewayStatus) GetServices() *ServiceStatusList {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *StoreGatewayStatus) GetMemberlist() *MemberlistStatus {
	if x != nil {
		return x.Memberlist
	}
	return nil
}

func (x *StoreGatewayStatus) GetRing() *RingStatus {
	if x != nil {
		return x.Ring
	}
	return nil
}

type QueryFrontendStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      *ServiceStatusList     `protobuf:"bytes,1,opt,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFrontendStatus) Reset() {
	*x = QueryFrontendStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFrontendStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFrontendStatus) ProtoMessage() {}

func (x *QueryFrontendStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFrontendStatus.ProtoReflect.Descriptor instead.
func (*QueryFrontendStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{15}
}

func (x *QueryFrontendStatus) GetServices() *ServiceStatusList {
	if x != nil {
		return x.Services
	}
	return nil
}

type QuerierStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      *ServiceStatusList     `protobuf:"bytes,1,opt,name=services,proto3" json:"services,omitempty"`
	Memberlist    *MemberlistStatus      `protobuf:"bytes,2,opt,name=memberlist,proto3" json:"memberlist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuerierStatus) Reset() {
	*x = QuerierStatus{}
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerierStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerierStatus) ProtoMessage() {}

func (x *QuerierStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerierStatus.ProtoReflect.Descriptor instead.
func (*QuerierStatus) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP(), []int{16}
}

func (x *QuerierStatus) GetServices() *ServiceStatusList {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *QuerierStatus) GetMemberlist() *MemberlistStatus {
	if x != nil {
		return x.Memberlist
	}
	return nil
}

var File_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto protoreflect.FileDescriptor

const file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDesc = "" +
	"\n" +
	"Igithub.com/aity-cloud/monty/plugins/metrics/apis/cortexadmin/status.proto\x12\vcortexadmin\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa5\x04\n" +
	"\fCortexStatus\x12@\n" +
	"\vdistributor\x18\x01 \x01(\v2\x1e.cortexadmin.DistributorStatusR\vdistributor\x127\n" +
	"\bingester\x18\x02 \x01(\v2\x1b.cortexadmin.IngesterStatusR\bingester\x12.\n" +
	"\x05ruler\x18\x03 \x01(\v2\x18.cortexadmin.RulerStatusR\x05ruler\x121\n" +
	"\x06purger\x18\x04 \x01(\v2\x19.cortexadmin.PurgerStatusR\x06purger\x12:\n" +
	"\tcompactor\x18\x05 \x01(\v2\x1c.cortexadmin.CompactorStatusR\tcompactor\x12C\n" +
	"\fstoreGateway\x18\x06 \x01(\v2\x1f.cortexadmin.StoreGatewayStatusR\fstoreGateway\x12F\n" +
	"\rqueryFrontend\x18\a \x01(\v2 .cortexadmin.QueryFrontendStatusR\rqueryFrontend\x124\n" +
	"\aquerier\x18\b \x01(\v2\x1a.cortexadmin.QuerierStatusR\aquerier\x128\n" +
	"\ttimestamp\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\";\n" +
	"\rServiceStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"K\n" +
	"\x11ServiceStatusList\x126\n" +
	"\bservices\x18\x01 \x03(\v2\x1a.cortexadmin.ServiceStatusR\bservices\"\xb1\x01\n" +
	"\vShardStatus\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp\x120\n" +
	"\x13registeredTimestamp\x18\x05 \x01(\tR\x13registeredTimestamp\x12\x12\n" +
	"\x04zone\x18\x06 \x01(\tR\x04zone\"C\n" +
	"\x0fShardStatusList\x120\n" +
	"\x06shards\x18\x01 \x03(\v2\x18.cortexadmin.ShardStatusR\x06shards\"f\n" +
	"\fMemberStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x12\x14\n" +
	"\x05state\x18\x04 \x01(\x05R\x05state\"C\n" +
	"\x10MemberStatusList\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.cortexadmin.MemberStatusR\x05items\"y\n" +
	"\x10MemberlistStatus\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x127\n" +
	"\amembers\x18\x02 \x01(\v2\x1d.cortexadmin.MemberStatusListR\amembers\x12\x12\n" +
	"\x04keys\x18\x03 \x03(\tR\x04keys\"\\\n" +
	"\n" +
	"RingStatus\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x124\n" +
	"\x06shards\x18\x02 \x01(\v2\x1c.cortexadmin.ShardStatusListR\x06shards\"\x8c\x01\n" +
	"\x11DistributorStatus\x12:\n" +
	"\bservices\x18\x01 \x01(\v2\x1e.cortexadmin.ServiceStatusListR\bservices\x12;\n" +
	"\fingesterRing\x18\x02 \x01(\v2\x17.cortexadmin.RingStatusR\fingesterRing\"\xb8\x01\n" +
	"\x0eIngesterStatus\x12:\n" +
	"\bservices\x18\x01 \x01(\v2\x1e.cortexadmin.ServiceStatusListR\bservices\x12=\n" +
	"\n" +
	"memberlist\x18\x02 \x01(\v2\x1d.cortexadmin.MemberlistStatusR\n" +
	"memberlist\x12+\n" +
	"\x04ring\x18\x03 \x01(\v2\x17.cortexadmin.RingStatusR\x04ring\"\xb5\x01\n" +
	"\vRulerStatus\x12:\n" +
	"\bservices\x18\x01 \x01(\v2\x1e.cortexadmin.ServiceStatusListR\bservices\x12=\n" +
	"\n" +
	"memberlist\x18\x02 \x01(\v2\x1d.cortexadmin.MemberlistStatusR\n" +
	"memberlist\x12+\n" +
	"\x04ring\x18\x03 \x01(\v2\x17.cortexadmin.RingStatusR\x04ring\"J\n" +
	"\fPurgerStatus\x12:\n" +
	"\bservices\x18\x01 \x01(\v2\x1e.cortexadmin.ServiceStatusListR\bservices\"\xb9\x01\n" +
	"\x0fCompactorStatus\x12:\n" +
	"\bservices\x18\x01 \x01(\v2\x1e.cortexadmin.ServiceStatusListR\bservices\x12=\n" +
	"\n" +
	"memberlist\x18\x02 \x01(\v2\x1d.cortexadmin.MemberlistStatusR\n" +
	"memberlist\x12+\n" +
	"\x04ring\x18\x03 \x01(\v2\x17.cortexadmin.RingStatusR\x04ring\"\xbc\x01\n" +
	"\x12StoreGatewayStatus\x12:\n" +
	"\bservices\x18\x01 \x01(\v2\x1e.cortexadmin.ServiceStatusListR\bservices\x12=\n" +
	"\n" +
	"memberlist\x18\x02 \x01(\v2\x1d.cortexadmin.MemberlistStatusR\n" +
	"memberlist\x12+\n" +
	"\x04ring\x18\x03 \x01(\v2\x17.cortexadmin.RingStatusR\x04ring\"Q\n" +
	"\x13QueryFrontendStatus\x12:\n" +
	"\bservices\x18\x01 \x01(\v2\x1e.cortexadmin.ServiceStatusListR\bservices\"\x8a\x01\n" +
	"\rQuerierStatus\x12:\n" +
	"\bservices\x18\x01 \x01(\v2\x1e.cortexadmin.ServiceStatusListR\bservices\x12=\n" +
	"\n" +
	"memberlist\x18\x02 \x01(\v2\x1d.cortexadmin.MemberlistStatusR\n" +
	"memberlistB>Z<github.com/aity-cloud/monty/plugins/metrics/apis/cortexadminb\x06proto3"

var (
	file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescOnce sync.Once
	file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescData []byte
)

func file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescGZIP() []byte {
	file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescOnce.Do(func() {
		file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDesc), len(file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDesc)))
	})
	return file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDescData
}

var file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_goTypes = []any{
	(*CortexStatus)(nil),          // 0: cortexadmin.CortexStatus
	(*ServiceStatus)(nil),         // 1: cortexadmin.ServiceStatus
	(*ServiceStatusList)(nil),     // 2: cortexadmin.ServiceStatusList
	(*ShardStatus)(nil),           // 3: cortexadmin.ShardStatus
	(*ShardStatusList)(nil),       // 4: cortexadmin.ShardStatusList
	(*MemberStatus)(nil),          // 5: cortexadmin.MemberStatus
	(*MemberStatusList)(nil),      // 6: cortexadmin.MemberStatusList
	(*MemberlistStatus)(nil),      // 7: cortexadmin.MemberlistStatus
	(*RingStatus)(nil),            // 8: cortexadmin.RingStatus
	(*DistributorStatus)(nil),     // 9: cortexadmin.DistributorStatus
	(*IngesterStatus)(nil),        // 10: cortexadmin.IngesterStatus
	(*RulerStatus)(nil),           // 11: cortexadmin.RulerStatus
	(*PurgerStatus)(nil),          // 12: cortexadmin.PurgerStatus
	(*CompactorStatus)(nil),       // 13: cortexadmin.CompactorStatus
	(*StoreGatewayStatus)(nil),    // 14: cortexadmin.StoreGatewayStatus
	(*QueryFrontendStatus)(nil),   // 15: cortexadmin.QueryFrontendStatus
	(*QuerierStatus)(nil),         // 16: cortexadmin.QuerierStatus
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
}
var file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_depIdxs = []int32{
	9,  // 0: cortexadmin.CortexStatus.distributor:type_name -> cortexadmin.DistributorStatus
	10, // 1: cortexadmin.CortexStatus.ingester:type_name -> cortexadmin.IngesterStatus
	11, // 2: cortexadmin.CortexStatus.ruler:type_name -> cortexadmin.RulerStatus
	12, // 3: cortexadmin.CortexStatus.purger:type_name -> cortexadmin.PurgerStatus
	13, // 4: cortexadmin.CortexStatus.compactor:type_name -> cortexadmin.CompactorStatus
	14, // 5: cortexadmin.CortexStatus.storeGateway:type_name -> cortexadmin.StoreGatewayStatus
	15, // 6: cortexadmin.CortexStatus.queryFrontend:type_name -> cortexadmin.QueryFrontendStatus
	16, // 7: cortexadmin.CortexStatus.querier:type_name -> cortexadmin.QuerierStatus
	17, // 8: cortexadmin.CortexStatus.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 9: cortexadmin.ServiceStatusList.services:type_name -> cortexadmin.ServiceStatus
	3,  // 10: cortexadmin.ShardStatusList.shards:type_name -> cortexadmin.ShardStatus
	5,  // 11: cortexadmin.MemberStatusList.items:type_name -> cortexadmin.MemberStatus
	6,  // 12: cortexadmin.MemberlistStatus.members:type_name -> cortexadmin.MemberStatusList
	4,  // 13: cortexadmin.RingStatus.shards:type_name -> cortexadmin.ShardStatusList
	2,  // 14: cortexadmin.DistributorStatus.services:type_name -> cortexadmin.ServiceStatusList
	8,  // 15: cortexadmin.DistributorStatus.ingesterRing:type_name -> cortexadmin.RingStatus
	2,  // 16: cortexadmin.IngesterStatus.services:type_name -> cortexadmin.ServiceStatusList
	7,  // 17: cortexadmin.IngesterStatus.memberlist:type_name -> cortexadmin.MemberlistStatus
	8,  // 18: cortexadmin.IngesterStatus.ring:type_name -> cortexadmin.RingStatus
	2,  // 19: cortexadmin.RulerStatus.services:type_name -> cortexadmin.ServiceStatusList
	7,  // 20: cortexadmin.RulerStatus.memberlist:type_name -> cortexadmin.MemberlistStatus
	8,  // 21: cortexadmin.RulerStatus.ring:type_name -> cortexadmin.RingStatus
	2,  // 22: cortexadmin.PurgerStatus.services:type_name -> cortexadmin.ServiceStatusList
	2,  // 23: cortexadmin.CompactorStatus.services:type_name -> cortexadmin.ServiceStatusList
	7,  // 24: cortexadmin.CompactorStatus.memberlist:type_name -> cortexadmin.MemberlistStatus
	8,  // 25: cortexadmin.CompactorStatus.ring:type_name -> cortexadmin.RingStatus
	2,  // 26: cortexadmin.StoreGatewayStatus.services:type_name -> cortexadmin.ServiceStatusList
	7,  // 27: cortexadmin.StoreGatewayStatus.memberlist:type_name -> cortexadmin.MemberlistStatus
	8,  // 28: cortexadmin.StoreGatewayStatus.ring:type_name -> cortexadmin.RingStatus
	2,  // 29: cortexadmin.QueryFrontendStatus.services:type_name -> cortexadmin.ServiceStatusList
	2,  // 30: cortexadmin.QuerierStatus.services:type_name -> cortexadmin.ServiceStatusList
	7,  // 31: cortexadmin.QuerierStatus.memberlist:type_name -> cortexadmin.MemberlistStatus
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_init() }
func file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_init() {
	if File_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDesc), len(file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_goTypes,
		DependencyIndexes: file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_depIdxs,
		MessageInfos:      file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_msgTypes,
	}.Build()
	File_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto = out.File
	file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_goTypes = nil
	file_github_com_aity_cloud_monty_plugins_metrics_apis_cortexadmin_status_proto_depIdxs = nil
}
