// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/rancher/opni/plugins/metrics/apis/cortexops/cortexops.proto

package cortexops

import (
	validate "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/kralicky/codegen/cli"
	compactor "github.com/rancher/opni/internal/cortex/config/compactor"
	querier "github.com/rancher/opni/internal/cortex/config/querier"
	runtimeconfig "github.com/rancher/opni/internal/cortex/config/runtimeconfig"
	storage "github.com/rancher/opni/internal/cortex/config/storage"
	validation "github.com/rancher/opni/internal/cortex/config/validation"
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	driverutil "github.com/rancher/opni/pkg/plugins/driverutil"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CapabilityBackendConfigSpec struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	Enabled         *bool                    `protobuf:"varint,1,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Revision        *v1.Revision             `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	CortexWorkloads *CortexWorkloadsConfig   `protobuf:"bytes,4,opt,name=cortexWorkloads,proto3" json:"cortexWorkloads,omitempty"`
	CortexConfig    *CortexApplicationConfig `protobuf:"bytes,5,opt,name=cortexConfig,proto3" json:"cortexConfig,omitempty"`
	Grafana         *GrafanaConfig           `protobuf:"bytes,9,opt,name=grafana,proto3" json:"grafana,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CapabilityBackendConfigSpec) Reset() {
	*x = CapabilityBackendConfigSpec{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilityBackendConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityBackendConfigSpec) ProtoMessage() {}

func (x *CapabilityBackendConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityBackendConfigSpec.ProtoReflect.Descriptor instead.
func (*CapabilityBackendConfigSpec) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{0}
}

func (x *CapabilityBackendConfigSpec) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *CapabilityBackendConfigSpec) GetRevision() *v1.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *CapabilityBackendConfigSpec) GetCortexWorkloads() *CortexWorkloadsConfig {
	if x != nil {
		return x.CortexWorkloads
	}
	return nil
}

func (x *CapabilityBackendConfigSpec) GetCortexConfig() *CortexApplicationConfig {
	if x != nil {
		return x.CortexConfig
	}
	return nil
}

func (x *CapabilityBackendConfigSpec) GetGrafana() *GrafanaConfig {
	if x != nil {
		return x.Grafana
	}
	return nil
}

type CortexWorkloadsConfig struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Targets       map[string]*CortexWorkloadSpec `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CortexWorkloadsConfig) Reset() {
	*x = CortexWorkloadsConfig{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CortexWorkloadsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CortexWorkloadsConfig) ProtoMessage() {}

func (x *CortexWorkloadsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CortexWorkloadsConfig.ProtoReflect.Descriptor instead.
func (*CortexWorkloadsConfig) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{1}
}

func (x *CortexWorkloadsConfig) GetTargets() map[string]*CortexWorkloadSpec {
	if x != nil {
		return x.Targets
	}
	return nil
}

type CortexWorkloadSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replicas      *int32                 `protobuf:"varint,1,opt,name=replicas,proto3,oneof" json:"replicas,omitempty"`
	ExtraArgs     []string               `protobuf:"bytes,2,rep,name=extraArgs,proto3" json:"extraArgs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CortexWorkloadSpec) Reset() {
	*x = CortexWorkloadSpec{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CortexWorkloadSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CortexWorkloadSpec) ProtoMessage() {}

func (x *CortexWorkloadSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CortexWorkloadSpec.ProtoReflect.Descriptor instead.
func (*CortexWorkloadSpec) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{2}
}

func (x *CortexWorkloadSpec) GetReplicas() int32 {
	if x != nil && x.Replicas != nil {
		return *x.Replicas
	}
	return 0
}

func (x *CortexWorkloadSpec) GetExtraArgs() []string {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

type CortexApplicationConfig struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Limits        *validation.Limits                 `protobuf:"bytes,1,opt,name=limits,proto3" json:"limits,omitempty"`
	RuntimeConfig *runtimeconfig.RuntimeConfigValues `protobuf:"bytes,2,opt,name=runtime_config,json=runtimeConfig,proto3" json:"runtime_config,omitempty"`
	Compactor     *compactor.Config                  `protobuf:"bytes,3,opt,name=compactor,proto3" json:"compactor,omitempty"`
	Querier       *querier.Config                    `protobuf:"bytes,4,opt,name=querier,proto3" json:"querier,omitempty"`
	Storage       *storage.Config                    `protobuf:"bytes,5,opt,name=storage,proto3" json:"storage,omitempty"`
	LogLevel      *string                            `protobuf:"bytes,6,opt,name=log_level,json=logLevel,proto3,oneof" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CortexApplicationConfig) Reset() {
	*x = CortexApplicationConfig{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CortexApplicationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CortexApplicationConfig) ProtoMessage() {}

func (x *CortexApplicationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CortexApplicationConfig.ProtoReflect.Descriptor instead.
func (*CortexApplicationConfig) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{3}
}

func (x *CortexApplicationConfig) GetLimits() *validation.Limits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *CortexApplicationConfig) GetRuntimeConfig() *runtimeconfig.RuntimeConfigValues {
	if x != nil {
		return x.RuntimeConfig
	}
	return nil
}

func (x *CortexApplicationConfig) GetCompactor() *compactor.Config {
	if x != nil {
		return x.Compactor
	}
	return nil
}

func (x *CortexApplicationConfig) GetQuerier() *querier.Config {
	if x != nil {
		return x.Querier
	}
	return nil
}

func (x *CortexApplicationConfig) GetStorage() *storage.Config {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *CortexApplicationConfig) GetLogLevel() string {
	if x != nil && x.LogLevel != nil {
		return *x.LogLevel
	}
	return ""
}

type GrafanaConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to deploy a managed Grafana instance.
	Enabled *bool `protobuf:"varint,1,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	// The version of Grafana to deploy.
	Version       *string `protobuf:"bytes,2,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Hostname      *string `protobuf:"bytes,3,opt,name=hostname,proto3,oneof" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrafanaConfig) Reset() {
	*x = GrafanaConfig{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrafanaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrafanaConfig) ProtoMessage() {}

func (x *GrafanaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrafanaConfig.ProtoReflect.Descriptor instead.
func (*GrafanaConfig) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{4}
}

func (x *GrafanaConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *GrafanaConfig) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *GrafanaConfig) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

type PresetList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Preset              `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresetList) Reset() {
	*x = PresetList{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetList) ProtoMessage() {}

func (x *PresetList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetList.ProtoReflect.Descriptor instead.
func (*PresetList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{5}
}

func (x *PresetList) GetItems() []*Preset {
	if x != nil {
		return x.Items
	}
	return nil
}

type Preset struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Id            *v1.Reference                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata      *driverutil.PresetMetadata   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *CapabilityBackendConfigSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Preset) Reset() {
	*x = Preset{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Preset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Preset) ProtoMessage() {}

func (x *Preset) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Preset.ProtoReflect.Descriptor instead.
func (*Preset) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{6}
}

func (x *Preset) GetId() *v1.Reference {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Preset) GetMetadata() *driverutil.PresetMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Preset) GetSpec() *CapabilityBackendConfigSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DryRunRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Target        driverutil.Target            `protobuf:"varint,1,opt,name=target,proto3,enum=driverutil.Target" json:"target,omitempty"`
	Action        driverutil.Action            `protobuf:"varint,2,opt,name=action,proto3,enum=driverutil.Action" json:"action,omitempty"`
	Spec          *CapabilityBackendConfigSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`         // Set
	Revision      *v1.Revision                 `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"` // Reset
	Patch         *CapabilityBackendConfigSpec `protobuf:"bytes,5,opt,name=patch,proto3" json:"patch,omitempty"`       // Reset
	Mask          *fieldmaskpb.FieldMask       `protobuf:"bytes,6,opt,name=mask,proto3" json:"mask,omitempty"`         // Reset
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DryRunRequest) Reset() {
	*x = DryRunRequest{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunRequest) ProtoMessage() {}

func (x *DryRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunRequest.ProtoReflect.Descriptor instead.
func (*DryRunRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{7}
}

func (x *DryRunRequest) GetTarget() driverutil.Target {
	if x != nil {
		return x.Target
	}
	return driverutil.Target(0)
}

func (x *DryRunRequest) GetAction() driverutil.Action {
	if x != nil {
		return x.Action
	}
	return driverutil.Action(0)
}

func (x *DryRunRequest) GetSpec() *CapabilityBackendConfigSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *DryRunRequest) GetRevision() *v1.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *DryRunRequest) GetPatch() *CapabilityBackendConfigSpec {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *DryRunRequest) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

type DryRunResponse struct {
	state            protoimpl.MessageState       `protogen:"open.v1"`
	Current          *CapabilityBackendConfigSpec `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Modified         *CapabilityBackendConfigSpec `protobuf:"bytes,2,opt,name=modified,proto3" json:"modified,omitempty"`
	ValidationErrors *validate.Violations         `protobuf:"bytes,3,opt,name=validationErrors,proto3" json:"validationErrors,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DryRunResponse) Reset() {
	*x = DryRunResponse{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunResponse) ProtoMessage() {}

func (x *DryRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunResponse.ProtoReflect.Descriptor instead.
func (*DryRunResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{8}
}

func (x *DryRunResponse) GetCurrent() *CapabilityBackendConfigSpec {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *DryRunResponse) GetModified() *CapabilityBackendConfigSpec {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *DryRunResponse) GetValidationErrors() *validate.Violations {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

type ConfigurationHistoryResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Entries       []*CapabilityBackendConfigSpec `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationHistoryResponse) Reset() {
	*x = ConfigurationHistoryResponse{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationHistoryResponse) ProtoMessage() {}

func (x *ConfigurationHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationHistoryResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationHistoryResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{9}
}

func (x *ConfigurationHistoryResponse) GetEntries() []*CapabilityBackendConfigSpec {
	if x != nil {
		return x.Entries
	}
	return nil
}

type SetRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Spec          *CapabilityBackendConfigSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{10}
}

func (x *SetRequest) GetSpec() *CapabilityBackendConfigSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ResetRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Revision      *v1.Revision                 `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
	Mask          *fieldmaskpb.FieldMask       `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	Patch         *CapabilityBackendConfigSpec `protobuf:"bytes,3,opt,name=patch,proto3" json:"patch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP(), []int{11}
}

func (x *ResetRequest) GetRevision() *v1.Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *ResetRequest) GetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *ResetRequest) GetPatch() *CapabilityBackendConfigSpec {
	if x != nil {
		return x.Patch
	}
	return nil
}

var File_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto protoreflect.FileDescriptor

const file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDesc = "" +
	"\n" +
	"Fgithub.com/rancher/opni/plugins/metrics/apis/cortexops/cortexops.proto\x12\tcortexops\x1a\x1bbuf/validate/validate.proto\x1a)github.com/kralicky/codegen/cli/cli.proto\x1aHgithub.com/rancher/opni/internal/cortex/config/compactor/compactor.proto\x1aDgithub.com/rancher/opni/internal/cortex/config/querier/querier.proto\x1aPgithub.com/rancher/opni/internal/cortex/config/runtimeconfig/runtimeconfig.proto\x1aDgithub.com/rancher/opni/internal/cortex/config/storage/storage.proto\x1aFgithub.com/rancher/opni/internal/cortex/config/validation/limits.proto\x1a3github.com/rancher/opni/pkg/apis/core/v1/core.proto\x1a:github.com/rancher/opni/pkg/plugins/driverutil/types.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\"\xc5\x04\n" +
	"\x1bCapabilityBackendConfigSpec\x12%\n" +
	"\aenabled\x18\x01 \x01(\bB\x06\x8a\xc0\f\x02(\x01H\x00R\aenabled\x88\x01\x01\x122\n" +
	"\brevision\x18\x02 \x01(\v2\x0e.core.RevisionB\x06\x8a\xc0\f\x02(\x01R\brevision\x12J\n" +
	"\x0fcortexWorkloads\x18\x04 \x01(\v2 .cortexops.CortexWorkloadsConfigR\x0fcortexWorkloads\x12F\n" +
	"\fcortexConfig\x18\x05 \x01(\v2\".cortexops.CortexApplicationConfigR\fcortexConfig\x122\n" +
	"\agrafana\x18\t \x01(\v2\x18.cortexops.GrafanaConfigR\agrafana:\xf6\x01\xbaH\xf2\x01\x1a\xef\x01\n" +
	"\x17filesystem_target_check\x12Ffilesystem storage backend can only be used with a single 'all' target\x1a\x8b\x01this.cortexConfig.storage.backend == 'filesystem'? size(this.cortexWorkloads.targets) == 1 && ('all' in this.cortexWorkloads.targets): trueB\n" +
	"\n" +
	"\b_enabled\"\xae\x02\n" +
	"\x15CortexWorkloadsConfig\x12\xb9\x01\n" +
	"\atargets\x18\x01 \x03(\v2-.cortexops.CortexWorkloadsConfig.TargetsEntryBp\xbaHg\x9a\x01d\b\x01\"`r^R\x03allR\tcompactorR\vdistributorR\bingesterR\x06purgerR\aquerierR\x0equery-frontendR\x05rulerR\rstore-gateway\x8a\xc0\f\x02(\x01R\atargets\x1aY\n" +
	"\fTargetsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.cortexops.CortexWorkloadSpecR\x05value:\x028\x01\"\x8d\x03\n" +
	"\x12CortexWorkloadSpec\x12(\n" +
	"\breplicas\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02 \x00H\x00R\breplicas\x88\x01\x01\x12\xbf\x02\n" +
	"\textraArgs\x18\x02 \x03(\tB\xa0\x02\xbaH\x9c\x02\x92\x01\x98\x02\x18\x01\"\x93\x02\xba\x01\x92\x01\n" +
	"\x13check_invalid_flags\x124flags not allowed: -target, -config, -modules, -help\x1aE['-target', '-config', '-modules', '-help'].all(s, !this.contains(s))\xba\x01z\n" +
	"\x13check_non_flag_args\x12Mnon-flag arguments not allowed (try '--flag=value' instead of '--flag value')\x1a\x14this.startsWith('-')R\textraArgsB\v\n" +
	"\t_replicas\"\xc1\x03\n" +
	"\x17CortexApplicationConfig\x12p\n" +
	"\x06limits\x18\x01 \x01(\v2\x12.validation.LimitsBD\x92\xc0\f@\n" +
	">\n" +
	"%type.googleapis.com/validation.Limits\x12\x15\t\x00\x00\x00\x00\x80O\"A\x18\xc0\x84=\x82\x03\x05\b\x80\x9a\x9e\x01R\x06limits\x12Q\n" +
	"\x0eruntime_config\x18\x02 \x01(\v2\".runtimeconfig.RuntimeConfigValuesB\x06\xbaH\x03\xd8\x01\x01R\rruntimeConfig\x12/\n" +
	"\tcompactor\x18\x03 \x01(\v2\x11.compactor.ConfigR\tcompactor\x12)\n" +
	"\aquerier\x18\x04 \x01(\v2\x0f.querier.ConfigR\aquerier\x12)\n" +
	"\astorage\x18\x05 \x01(\v2\x0f.storage.ConfigR\astorage\x12L\n" +
	"\tlog_level\x18\x06 \x01(\tB*\xbaH\x1cr\x1aR\x05debugR\x04infoR\x04warnR\x05error\x8a\xc0\f\a\n" +
	"\x05debugH\x00R\blogLevel\x88\x01\x01B\f\n" +
	"\n" +
	"_log_level\"\xa0\x01\n" +
	"\rGrafanaConfig\x12*\n" +
	"\aenabled\x18\x01 \x01(\bB\v\x8a\xc0\f\a\n" +
	"\x05falseH\x00R\aenabled\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x02 \x01(\tH\x01R\aversion\x88\x01\x01\x12\x1f\n" +
	"\bhostname\x18\x03 \x01(\tH\x02R\bhostname\x88\x01\x01B\n" +
	"\n" +
	"\b_enabledB\n" +
	"\n" +
	"\b_versionB\v\n" +
	"\t_hostname\"5\n" +
	"\n" +
	"PresetList\x12'\n" +
	"\x05items\x18\x01 \x03(\v2\x11.cortexops.PresetR\x05items\"\x9d\x01\n" +
	"\x06Preset\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\v2\x0f.core.ReferenceR\x02id\x126\n" +
	"\bmetadata\x18\x02 \x01(\v2\x1a.driverutil.PresetMetadataR\bmetadata\x12:\n" +
	"\x04spec\x18\x03 \x01(\v2&.cortexops.CapabilityBackendConfigSpecR\x04spec\"\xd5\x02\n" +
	"\rDryRunRequest\x12*\n" +
	"\x06target\x18\x01 \x01(\x0e2\x12.driverutil.TargetR\x06target\x12*\n" +
	"\x06action\x18\x02 \x01(\x0e2\x12.driverutil.ActionR\x06action\x12:\n" +
	"\x04spec\x18\x03 \x01(\v2&.cortexops.CapabilityBackendConfigSpecR\x04spec\x122\n" +
	"\brevision\x18\x04 \x01(\v2\x0e.core.RevisionB\x06\x92\xc0\f\x02\x10\x01R\brevision\x12D\n" +
	"\x05patch\x18\x05 \x01(\v2&.cortexops.CapabilityBackendConfigSpecB\x06\x8a\xc0\f\x02(\x01R\x05patch\x126\n" +
	"\x04mask\x18\x06 \x01(\v2\x1a.google.protobuf.FieldMaskB\x06\x8a\xc0\f\x02(\x01R\x04mask\"\xdc\x01\n" +
	"\x0eDryRunResponse\x12@\n" +
	"\acurrent\x18\x01 \x01(\v2&.cortexops.CapabilityBackendConfigSpecR\acurrent\x12B\n" +
	"\bmodified\x18\x02 \x01(\v2&.cortexops.CapabilityBackendConfigSpecR\bmodified\x12D\n" +
	"\x10validationErrors\x18\x03 \x01(\v2\x18.buf.validate.ViolationsR\x10validationErrors\"`\n" +
	"\x1cConfigurationHistoryResponse\x12@\n" +
	"\aentries\x18\x01 \x03(\v2&.cortexops.CapabilityBackendConfigSpecR\aentries\"H\n" +
	"\n" +
	"SetRequest\x12:\n" +
	"\x04spec\x18\x01 \x01(\v2&.cortexops.CapabilityBackendConfigSpecR\x04spec\"\xc0\x01\n" +
	"\fResetRequest\x122\n" +
	"\brevision\x18\x01 \x01(\v2\x0e.core.RevisionB\x06\x92\xc0\f\x02\x10\x01R\brevision\x126\n" +
	"\x04mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\x06\x8a\xc0\f\x02(\x01R\x04mask\x12D\n" +
	"\x05patch\x18\x03 \x01(\v2&.cortexops.CapabilityBackendConfigSpecB\x06\x8a\xc0\f\x02(\x01R\x05patch2\xc0\v\n" +
	"\tCortexOps\x12\x97\x01\n" +
	"\x17GetDefaultConfiguration\x12\x16.driverutil.GetRequest\x1a&.cortexops.CapabilityBackendConfigSpec\"<\x82\xc0\f\x1a\x8a\xc0\f\x12config get-default\xa8\xc0\f\x01\x82\xd3\xe4\x93\x02\x18\x12\x16/configuration/default\x12\x89\x01\n" +
	"\x17SetDefaultConfiguration\x12\x15.cortexops.SetRequest\x1a\x16.google.protobuf.Empty\"?\x82\xc0\f\x1a\x8a\xc0\f\x12config set-default\xb0\xc0\f\x01\x82\xd3\xe4\x93\x02\x1b:\x01*\x1a\x16/configuration/default\x12\x8d\x01\n" +
	"\x19ResetDefaultConfiguration\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"@\x82\xc0\f\x18\x8a\xc0\f\x14config reset-default\x82\xd3\xe4\x93\x02\x1e\"\x1c/configuration/default/reset\x12\x80\x01\n" +
	"\x10GetConfiguration\x12\x16.driverutil.GetRequest\x1a&.cortexops.CapabilityBackendConfigSpec\",\x82\xc0\f\x12\x8a\xc0\f\n" +
	"config get\xa8\xc0\f\x01\x82\xd3\xe4\x93\x02\x10\x12\x0e/configuration\x12v\n" +
	"\x10SetConfiguration\x12\x15.cortexops.SetRequest\x1a\x16.google.protobuf.Empty\"3\x82\xc0\f\x16\x8a\xc0\f\n" +
	"config set\xa8\xc0\f\x01\xb0\xc0\f\x01\x82\xd3\xe4\x93\x02\x13:\x01*\x1a\x0e/configuration\x12z\n" +
	"\x12ResetConfiguration\x12\x17.cortexops.ResetRequest\x1a\x16.google.protobuf.Empty\"3\x82\xc0\f\x10\x8a\xc0\f\fconfig reset\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/configuration/reset\x12Z\n" +
	"\x06DryRun\x12\x18.cortexops.DryRunRequest\x1a\x19.cortexops.DryRunResponse\"\x1b\x82\xc0\f\x04\xa0\xc0\f\x01\x82\xd3\xe4\x93\x02\r:\x01*\"\b/dry-run\x12\x9e\x01\n" +
	"\x14ConfigurationHistory\x12'.driverutil.ConfigurationHistoryRequest\x1a'.cortexops.ConfigurationHistoryResponse\"4\x82\xc0\f\x12\x8a\xc0\f\x0econfig history\x82\xd3\xe4\x93\x02\x18\x12\x16/configuration/history\x12Z\n" +
	"\x06Status\x12\x16.google.protobuf.Empty\x1a\x19.driverutil.InstallStatus\"\x1d\x82\xc0\f\n" +
	"\x8a\xc0\f\x06status\x82\xd3\xe4\x93\x02\t\x12\a/status\x12Z\n" +
	"\aInstall\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x1f\x82\xc0\f\v\x8a\xc0\f\ainstall\x82\xd3\xe4\x93\x02\n" +
	"\"\b/install\x12`\n" +
	"\tUninstall\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"#\x82\xc0\f\r\x8a\xc0\f\tuninstall\x82\xd3\xe4\x93\x02\f\"\n" +
	"/uninstall\x12b\n" +
	"\vListPresets\x12\x16.google.protobuf.Empty\x1a\x15.cortexops.PresetList\"$\x82\xc0\f\x10\x8a\xc0\f\fpresets list\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/presets\x1a\v\x82\xc0\f\a\x8a\xc0\f\x03opsB@\x82\xc0\f\x04\b\x01\x10\x01Z6github.com/rancher/opni/plugins/metrics/apis/cortexopsb\x06proto3"

var (
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescData []byte
)

func file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDesc), len(file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDesc)))
	})
	return file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDescData
}

var file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_goTypes = []any{
	(*CapabilityBackendConfigSpec)(nil),            // 0: cortexops.CapabilityBackendConfigSpec
	(*CortexWorkloadsConfig)(nil),                  // 1: cortexops.CortexWorkloadsConfig
	(*CortexWorkloadSpec)(nil),                     // 2: cortexops.CortexWorkloadSpec
	(*CortexApplicationConfig)(nil),                // 3: cortexops.CortexApplicationConfig
	(*GrafanaConfig)(nil),                          // 4: cortexops.GrafanaConfig
	(*PresetList)(nil),                             // 5: cortexops.PresetList
	(*Preset)(nil),                                 // 6: cortexops.Preset
	(*DryRunRequest)(nil),                          // 7: cortexops.DryRunRequest
	(*DryRunResponse)(nil),                         // 8: cortexops.DryRunResponse
	(*ConfigurationHistoryResponse)(nil),           // 9: cortexops.ConfigurationHistoryResponse
	(*SetRequest)(nil),                             // 10: cortexops.SetRequest
	(*ResetRequest)(nil),                           // 11: cortexops.ResetRequest
	nil,                                            // 12: cortexops.CortexWorkloadsConfig.TargetsEntry
	(*v1.Revision)(nil),                            // 13: core.Revision
	(*validation.Limits)(nil),                      // 14: validation.Limits
	(*runtimeconfig.RuntimeConfigValues)(nil),      // 15: runtimeconfig.RuntimeConfigValues
	(*compactor.Config)(nil),                       // 16: compactor.Config
	(*querier.Config)(nil),                         // 17: querier.Config
	(*storage.Config)(nil),                         // 18: storage.Config
	(*v1.Reference)(nil),                           // 19: core.Reference
	(*driverutil.PresetMetadata)(nil),              // 20: driverutil.PresetMetadata
	(driverutil.Target)(0),                         // 21: driverutil.Target
	(driverutil.Action)(0),                         // 22: driverutil.Action
	(*fieldmaskpb.FieldMask)(nil),                  // 23: google.protobuf.FieldMask
	(*validate.Violations)(nil),                    // 24: buf.validate.Violations
	(*driverutil.GetRequest)(nil),                  // 25: driverutil.GetRequest
	(*emptypb.Empty)(nil),                          // 26: google.protobuf.Empty
	(*driverutil.ConfigurationHistoryRequest)(nil), // 27: driverutil.ConfigurationHistoryRequest
	(*driverutil.InstallStatus)(nil),               // 28: driverutil.InstallStatus
}
var file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_depIdxs = []int32{
	13, // 0: cortexops.CapabilityBackendConfigSpec.revision:type_name -> core.Revision
	1,  // 1: cortexops.CapabilityBackendConfigSpec.cortexWorkloads:type_name -> cortexops.CortexWorkloadsConfig
	3,  // 2: cortexops.CapabilityBackendConfigSpec.cortexConfig:type_name -> cortexops.CortexApplicationConfig
	4,  // 3: cortexops.CapabilityBackendConfigSpec.grafana:type_name -> cortexops.GrafanaConfig
	12, // 4: cortexops.CortexWorkloadsConfig.targets:type_name -> cortexops.CortexWorkloadsConfig.TargetsEntry
	14, // 5: cortexops.CortexApplicationConfig.limits:type_name -> validation.Limits
	15, // 6: cortexops.CortexApplicationConfig.runtime_config:type_name -> runtimeconfig.RuntimeConfigValues
	16, // 7: cortexops.CortexApplicationConfig.compactor:type_name -> compactor.Config
	17, // 8: cortexops.CortexApplicationConfig.querier:type_name -> querier.Config
	18, // 9: cortexops.CortexApplicationConfig.storage:type_name -> storage.Config
	6,  // 10: cortexops.PresetList.items:type_name -> cortexops.Preset
	19, // 11: cortexops.Preset.id:type_name -> core.Reference
	20, // 12: cortexops.Preset.metadata:type_name -> driverutil.PresetMetadata
	0,  // 13: cortexops.Preset.spec:type_name -> cortexops.CapabilityBackendConfigSpec
	21, // 14: cortexops.DryRunRequest.target:type_name -> driverutil.Target
	22, // 15: cortexops.DryRunRequest.action:type_name -> driverutil.Action
	0,  // 16: cortexops.DryRunRequest.spec:type_name -> cortexops.CapabilityBackendConfigSpec
	13, // 17: cortexops.DryRunRequest.revision:type_name -> core.Revision
	0,  // 18: cortexops.DryRunRequest.patch:type_name -> cortexops.CapabilityBackendConfigSpec
	23, // 19: cortexops.DryRunRequest.mask:type_name -> google.protobuf.FieldMask
	0,  // 20: cortexops.DryRunResponse.current:type_name -> cortexops.CapabilityBackendConfigSpec
	0,  // 21: cortexops.DryRunResponse.modified:type_name -> cortexops.CapabilityBackendConfigSpec
	24, // 22: cortexops.DryRunResponse.validationErrors:type_name -> buf.validate.Violations
	0,  // 23: cortexops.ConfigurationHistoryResponse.entries:type_name -> cortexops.CapabilityBackendConfigSpec
	0,  // 24: cortexops.SetRequest.spec:type_name -> cortexops.CapabilityBackendConfigSpec
	13, // 25: cortexops.ResetRequest.revision:type_name -> core.Revision
	23, // 26: cortexops.ResetRequest.mask:type_name -> google.protobuf.FieldMask
	0,  // 27: cortexops.ResetRequest.patch:type_name -> cortexops.CapabilityBackendConfigSpec
	2,  // 28: cortexops.CortexWorkloadsConfig.TargetsEntry.value:type_name -> cortexops.CortexWorkloadSpec
	25, // 29: cortexops.CortexOps.GetDefaultConfiguration:input_type -> driverutil.GetRequest
	10, // 30: cortexops.CortexOps.SetDefaultConfiguration:input_type -> cortexops.SetRequest
	26, // 31: cortexops.CortexOps.ResetDefaultConfiguration:input_type -> google.protobuf.Empty
	25, // 32: cortexops.CortexOps.GetConfiguration:input_type -> driverutil.GetRequest
	10, // 33: cortexops.CortexOps.SetConfiguration:input_type -> cortexops.SetRequest
	11, // 34: cortexops.CortexOps.ResetConfiguration:input_type -> cortexops.ResetRequest
	7,  // 35: cortexops.CortexOps.DryRun:input_type -> cortexops.DryRunRequest
	27, // 36: cortexops.CortexOps.ConfigurationHistory:input_type -> driverutil.ConfigurationHistoryRequest
	26, // 37: cortexops.CortexOps.Status:input_type -> google.protobuf.Empty
	26, // 38: cortexops.CortexOps.Install:input_type -> google.protobuf.Empty
	26, // 39: cortexops.CortexOps.Uninstall:input_type -> google.protobuf.Empty
	26, // 40: cortexops.CortexOps.ListPresets:input_type -> google.protobuf.Empty
	0,  // 41: cortexops.CortexOps.GetDefaultConfiguration:output_type -> cortexops.CapabilityBackendConfigSpec
	26, // 42: cortexops.CortexOps.SetDefaultConfiguration:output_type -> google.protobuf.Empty
	26, // 43: cortexops.CortexOps.ResetDefaultConfiguration:output_type -> google.protobuf.Empty
	0,  // 44: cortexops.CortexOps.GetConfiguration:output_type -> cortexops.CapabilityBackendConfigSpec
	26, // 45: cortexops.CortexOps.SetConfiguration:output_type -> google.protobuf.Empty
	26, // 46: cortexops.CortexOps.ResetConfiguration:output_type -> google.protobuf.Empty
	8,  // 47: cortexops.CortexOps.DryRun:output_type -> cortexops.DryRunResponse
	9,  // 48: cortexops.CortexOps.ConfigurationHistory:output_type -> cortexops.ConfigurationHistoryResponse
	28, // 49: cortexops.CortexOps.Status:output_type -> driverutil.InstallStatus
	26, // 50: cortexops.CortexOps.Install:output_type -> google.protobuf.Empty
	26, // 51: cortexops.CortexOps.Uninstall:output_type -> google.protobuf.Empty
	5,  // 52: cortexops.CortexOps.ListPresets:output_type -> cortexops.PresetList
	41, // [41:53] is the sub-list for method output_type
	29, // [29:41] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_init() }
func file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_init() {
	if File_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto != nil {
		return
	}
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[0].OneofWrappers = []any{}
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[2].OneofWrappers = []any{}
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[3].OneofWrappers = []any{}
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDesc), len(file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_depIdxs,
		MessageInfos:      file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto = out.File
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_goTypes = nil
	file_github_com_rancher_opni_plugins_metrics_apis_cortexops_cortexops_proto_depIdxs = nil
}
