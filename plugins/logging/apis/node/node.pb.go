// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/aity-cloud/monty/plugins/logging/apis/node/node.proto

package node

import (
	_ "github.com/aity-cloud/monty/pkg/apis/capability/v1"
	_ "github.com/aity-cloud/monty/pkg/config/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigStatus int32

const (
	ConfigStatus_Unknown     ConfigStatus = 0
	ConfigStatus_UpToDate    ConfigStatus = 1
	ConfigStatus_NeedsUpdate ConfigStatus = 2
)

// Enum value maps for ConfigStatus.
var (
	ConfigStatus_name = map[int32]string{
		0: "Unknown",
		1: "UpToDate",
		2: "NeedsUpdate",
	}
	ConfigStatus_value = map[string]int32{
		"Unknown":     0,
		"UpToDate":    1,
		"NeedsUpdate": 2,
	}
)

func (x ConfigStatus) Enum() *ConfigStatus {
	p := new(ConfigStatus)
	*p = x
	return p
}

func (x ConfigStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_enumTypes[0].Descriptor()
}

func (ConfigStatus) Type() protoreflect.EnumType {
	return &file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_enumTypes[0]
}

func (x ConfigStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigStatus.Descriptor instead.
func (ConfigStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescGZIP(), []int{0}
}

type LoggingCapabilityConfig struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Enabled bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// If enabled is false, conditions may contain a list of relevant status
	// messages describing why the capability is disabled.
	Conditions    []string `protobuf:"bytes,2,rep,name=conditions,proto3" json:"conditions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoggingCapabilityConfig) Reset() {
	*x = LoggingCapabilityConfig{}
	mi := &file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggingCapabilityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingCapabilityConfig) ProtoMessage() {}

func (x *LoggingCapabilityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingCapabilityConfig.ProtoReflect.Descriptor instead.
func (*LoggingCapabilityConfig) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescGZIP(), []int{0}
}

func (x *LoggingCapabilityConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LoggingCapabilityConfig) GetConditions() []string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type SyncRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	CurrentConfig *LoggingCapabilityConfig `protobuf:"bytes,1,opt,name=currentConfig,proto3" json:"currentConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	mi := &file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescGZIP(), []int{1}
}

func (x *SyncRequest) GetCurrentConfig() *LoggingCapabilityConfig {
	if x != nil {
		return x.CurrentConfig
	}
	return nil
}

type SyncResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ConfigStatus  ConfigStatus             `protobuf:"varint,1,opt,name=configStatus,proto3,enum=node.logging.ConfigStatus" json:"configStatus,omitempty"`
	UpdatedConfig *LoggingCapabilityConfig `protobuf:"bytes,2,opt,name=updatedConfig,proto3" json:"updatedConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	mi := &file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescGZIP(), []int{2}
}

func (x *SyncResponse) GetConfigStatus() ConfigStatus {
	if x != nil {
		return x.ConfigStatus
	}
	return ConfigStatus_Unknown
}

func (x *SyncResponse) GetUpdatedConfig() *LoggingCapabilityConfig {
	if x != nil {
		return x.UpdatedConfig
	}
	return nil
}

var File_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto protoreflect.FileDescriptor

const file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDesc = "" +
	"\n" +
	"@github.com/aity-cloud/monty/plugins/logging/apis/node/node.proto\x12\fnode.logging\x1a\x1bgoogle/protobuf/empty.proto\x1aAgithub.com/aity-cloud/monty/pkg/config/v1beta1/agent_config.proto\x1aCgithub.com/aity-cloud/monty/pkg/apis/capability/v1/capability.proto\"S\n" +
	"\x17LoggingCapabilityConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1e\n" +
	"\n" +
	"conditions\x18\x02 \x03(\tR\n" +
	"conditions\"Z\n" +
	"\vSyncRequest\x12K\n" +
	"\rcurrentConfig\x18\x01 \x01(\v2%.node.logging.LoggingCapabilityConfigR\rcurrentConfig\"\x9b\x01\n" +
	"\fSyncResponse\x12>\n" +
	"\fconfigStatus\x18\x01 \x01(\x0e2\x1a.node.logging.ConfigStatusR\fconfigStatus\x12K\n" +
	"\rupdatedConfig\x18\x02 \x01(\v2%.node.logging.LoggingCapabilityConfigR\rupdatedConfig*:\n" +
	"\fConfigStatus\x12\v\n" +
	"\aUnknown\x10\x00\x12\f\n" +
	"\bUpToDate\x10\x01\x12\x0f\n" +
	"\vNeedsUpdate\x10\x022V\n" +
	"\x15NodeLoggingCapability\x12=\n" +
	"\x04Sync\x12\x19.node.logging.SyncRequest\x1a\x1a.node.logging.SyncResponseB7Z5github.com/aity-cloud/monty/plugins/logging/apis/nodeb\x06proto3"

var (
	file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescOnce sync.Once
	file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescData []byte
)

func file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescGZIP() []byte {
	file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescOnce.Do(func() {
		file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDesc), len(file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDesc)))
	})
	return file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDescData
}

var file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_goTypes = []any{
	(ConfigStatus)(0),               // 0: node.logging.ConfigStatus
	(*LoggingCapabilityConfig)(nil), // 1: node.logging.LoggingCapabilityConfig
	(*SyncRequest)(nil),             // 2: node.logging.SyncRequest
	(*SyncResponse)(nil),            // 3: node.logging.SyncResponse
}
var file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_depIdxs = []int32{
	1, // 0: node.logging.SyncRequest.currentConfig:type_name -> node.logging.LoggingCapabilityConfig
	0, // 1: node.logging.SyncResponse.configStatus:type_name -> node.logging.ConfigStatus
	1, // 2: node.logging.SyncResponse.updatedConfig:type_name -> node.logging.LoggingCapabilityConfig
	2, // 3: node.logging.NodeLoggingCapability.Sync:input_type -> node.logging.SyncRequest
	3, // 4: node.logging.NodeLoggingCapability.Sync:output_type -> node.logging.SyncResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_init() }
func file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_init() {
	if File_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDesc), len(file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_goTypes,
		DependencyIndexes: file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_depIdxs,
		EnumInfos:         file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_enumTypes,
		MessageInfos:      file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_msgTypes,
	}.Build()
	File_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto = out.File
	file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_goTypes = nil
	file_github_com_aity_cloud_monty_plugins_logging_apis_node_node_proto_depIdxs = nil
}
