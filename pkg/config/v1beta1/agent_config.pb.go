// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/rancher/opni/pkg/config/v1beta1/agent_config.proto

package v1beta1

import (
	_ "github.com/kralicky/codegen/cli"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RulesSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Discovery     *DiscoverySpec         `protobuf:"bytes,1,opt,name=discovery,proto3" json:"discovery,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RulesSpec) Reset() {
	*x = RulesSpec{}
	mi := &file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RulesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RulesSpec) ProtoMessage() {}

func (x *RulesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RulesSpec.ProtoReflect.Descriptor instead.
func (*RulesSpec) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescGZIP(), []int{0}
}

func (x *RulesSpec) GetDiscovery() *DiscoverySpec {
	if x != nil {
		return x.Discovery
	}
	return nil
}

type DiscoverySpec struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PrometheusRules *PrometheusRulesSpec   `protobuf:"bytes,1,opt,name=prometheusRules,proto3" json:"prometheusRules,omitempty"`
	Filesystem      *FilesystemRulesSpec   `protobuf:"bytes,2,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	Interval        *string                `protobuf:"bytes,3,opt,name=interval,proto3,oneof" json:"interval,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DiscoverySpec) Reset() {
	*x = DiscoverySpec{}
	mi := &file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverySpec) ProtoMessage() {}

func (x *DiscoverySpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverySpec.ProtoReflect.Descriptor instead.
func (*DiscoverySpec) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoverySpec) GetPrometheusRules() *PrometheusRulesSpec {
	if x != nil {
		return x.PrometheusRules
	}
	return nil
}

func (x *DiscoverySpec) GetFilesystem() *FilesystemRulesSpec {
	if x != nil {
		return x.Filesystem
	}
	return nil
}

func (x *DiscoverySpec) GetInterval() string {
	if x != nil && x.Interval != nil {
		return *x.Interval
	}
	return ""
}

type PrometheusRulesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespaces to search for rules in. If empty, will search all accessible
	// namespaces.
	SearchNamespaces []string `protobuf:"bytes,1,rep,name=searchNamespaces,proto3" json:"searchNamespaces,omitempty"`
	// Kubeconfig to use for rule discovery. If nil, will use the in-cluster
	// kubeconfig.
	Kubeconfig    *string `protobuf:"bytes,2,opt,name=kubeconfig,proto3,oneof" json:"kubeconfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrometheusRulesSpec) Reset() {
	*x = PrometheusRulesSpec{}
	mi := &file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrometheusRulesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusRulesSpec) ProtoMessage() {}

func (x *PrometheusRulesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusRulesSpec.ProtoReflect.Descriptor instead.
func (*PrometheusRulesSpec) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescGZIP(), []int{2}
}

func (x *PrometheusRulesSpec) GetSearchNamespaces() []string {
	if x != nil {
		return x.SearchNamespaces
	}
	return nil
}

func (x *PrometheusRulesSpec) GetKubeconfig() string {
	if x != nil && x.Kubeconfig != nil {
		return *x.Kubeconfig
	}
	return ""
}

type FilesystemRulesSpec struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PathExpressions []string               `protobuf:"bytes,1,rep,name=pathExpressions,proto3" json:"pathExpressions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FilesystemRulesSpec) Reset() {
	*x = FilesystemRulesSpec{}
	mi := &file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilesystemRulesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesystemRulesSpec) ProtoMessage() {}

func (x *FilesystemRulesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesystemRulesSpec.ProtoReflect.Descriptor instead.
func (*FilesystemRulesSpec) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescGZIP(), []int{3}
}

func (x *FilesystemRulesSpec) GetPathExpressions() []string {
	if x != nil {
		return x.PathExpressions
	}
	return nil
}

var File_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto protoreflect.FileDescriptor

const file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDesc = "" +
	"\n" +
	"=github.com/rancher/opni/pkg/config/v1beta1/agent_config.proto\x12\x0econfig.v1beta1\x1a)github.com/kralicky/codegen/cli/cli.proto\"H\n" +
	"\tRulesSpec\x12;\n" +
	"\tdiscovery\x18\x01 \x01(\v2\x1d.config.v1beta1.DiscoverySpecR\tdiscovery\"\xd1\x01\n" +
	"\rDiscoverySpec\x12M\n" +
	"\x0fprometheusRules\x18\x01 \x01(\v2#.config.v1beta1.PrometheusRulesSpecR\x0fprometheusRules\x12C\n" +
	"\n" +
	"filesystem\x18\x02 \x01(\v2#.config.v1beta1.FilesystemRulesSpecR\n" +
	"filesystem\x12\x1f\n" +
	"\binterval\x18\x03 \x01(\tH\x00R\binterval\x88\x01\x01B\v\n" +
	"\t_interval\"u\n" +
	"\x13PrometheusRulesSpec\x12*\n" +
	"\x10searchNamespaces\x18\x01 \x03(\tR\x10searchNamespaces\x12#\n" +
	"\n" +
	"kubeconfig\x18\x02 \x01(\tH\x00R\n" +
	"kubeconfig\x88\x01\x01B\r\n" +
	"\v_kubeconfig\"?\n" +
	"\x13FilesystemRulesSpec\x12(\n" +
	"\x0fpathExpressions\x18\x01 \x03(\tR\x0fpathExpressionsB2\x82\xc0\f\x02\b\x01Z*github.com/rancher/opni/pkg/config/v1beta1b\x06proto3"

var (
	file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescData []byte
)

func file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDesc), len(file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDesc)))
	})
	return file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDescData
}

var file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_goTypes = []any{
	(*RulesSpec)(nil),           // 0: config.v1beta1.RulesSpec
	(*DiscoverySpec)(nil),       // 1: config.v1beta1.DiscoverySpec
	(*PrometheusRulesSpec)(nil), // 2: config.v1beta1.PrometheusRulesSpec
	(*FilesystemRulesSpec)(nil), // 3: config.v1beta1.FilesystemRulesSpec
}
var file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_depIdxs = []int32{
	1, // 0: config.v1beta1.RulesSpec.discovery:type_name -> config.v1beta1.DiscoverySpec
	2, // 1: config.v1beta1.DiscoverySpec.prometheusRules:type_name -> config.v1beta1.PrometheusRulesSpec
	3, // 2: config.v1beta1.DiscoverySpec.filesystem:type_name -> config.v1beta1.FilesystemRulesSpec
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_init() }
func file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_init() {
	if File_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto != nil {
		return
	}
	file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[1].OneofWrappers = []any{}
	file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDesc), len(file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_depIdxs,
		MessageInfos:      file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto = out.File
	file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_goTypes = nil
	file_github_com_rancher_opni_pkg_config_v1beta1_agent_config_proto_depIdxs = nil
}
