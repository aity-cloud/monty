syntax = "proto3";
option go_package = "github.com/rancher/opni/pkg/test/testdata/plugins/ext";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

package ext;

service Ext {
  rpc Foo(FooRequest) returns (FooResponse) {
    option (google.api.http) = {
      post: "/foo"
      body: "request"
      additional_bindings {
        get: "/foo"
      }
      additional_bindings {
        put: "/foo"
        body: "request"
      }
      additional_bindings {
        delete: "/foo"
      }
      additional_bindings {
        patch: "/foo"
        body: "request"
      }
    };
  }
  rpc Bar(BarRequest) returns (BarResponse) {
    option (google.api.http) = {
      post: "/bar/{param1}/{param2}"
      body: "param3"
      additional_bindings {
        get: "/bar/{param1}/{param2}/{param3}"
      }
    };
  }
  rpc Baz(BazRequest) returns (BazRequest) {
    option (google.api.http) = {
      post: "/baz"
      body: "*"
      additional_bindings {
        post: "/baz/{paramMsg.paramBool}/{paramMsg.paramString}/{paramMsg.paramEnum}"
        body: "*"
      }
      additional_bindings {
        post: "/baz/{paramMsg.paramMsg.paramMsg.paramMsg.paramString}"
        body: "*"
      }
    };
  }
  rpc Set(SetRequest) returns (SetRequest) {
    option (google.api.http) = {
      put: "/set/{node.id}"
      body: "*"

      additional_bindings {
        put: "/set/example/{node.id}"
        body: "example"
      }
    };
  }
  rpc ServerStream(FooRequest) returns (stream FooResponse);
  rpc ClientStream(stream FooRequest) returns (FooResponse);
}

message Reference {
  string id = 1;
}

message SetRequest {
  Reference node = 1;
  string value = 2;
  ExampleValue example = 3;
}

message ExampleValue {
  string value = 1;
}

service Ext2 {
  rpc Foo(FooRequest) returns (FooResponse);
}

message FooRequest {
  string request = 1;
}

message FooResponse {
  string response = 1;
}

message BarRequest {
  string param1 = 1;
  string param2 = 2;
  string param3 = 3;
}

message BarResponse {
  string param1 = 1;
  string param2 = 2;
  string param3 = 3;
}

message BazRequest {
  enum BazEnum {
    UNKNOWN = 0;
    FOO = 1;
    BAR = 2;
  }
  double paramFloat64 = 1;
  int64 paramInt64 = 3;
  bool paramBool = 8;
  string paramString = 9;
  bytes paramBytes = 10;
  BazEnum paramEnum = 11;
  repeated string paramRepeatedString = 12;
  BazRequest paramMsg = 13;
}