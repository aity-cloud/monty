// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/rancher/opni/pkg/apis/control/v1/remote.proto

package v1

import (
	_ "github.com/kralicky/totem"
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PatchOp int32

const (
	// revisions match
	PatchOp_None PatchOp = 0
	// same plugin exists on both
	PatchOp_Update PatchOp = 1
	// missing plugin on agent
	PatchOp_Create PatchOp = 2
	// outdated plugin on agent, with no version on the gateway
	PatchOp_Remove PatchOp = 3
	// same plugin contents and module name, but the file name is different
	PatchOp_Rename PatchOp = 4
)

// Enum value maps for PatchOp.
var (
	PatchOp_name = map[int32]string{
		0: "None",
		1: "Update",
		2: "Create",
		3: "Remove",
		4: "Rename",
	}
	PatchOp_value = map[string]int32{
		"None":   0,
		"Update": 1,
		"Create": 2,
		"Remove": 3,
		"Rename": 4,
	}
)

func (x PatchOp) Enum() *PatchOp {
	p := new(PatchOp)
	*p = x
	return p
}

func (x PatchOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PatchOp) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_enumTypes[0].Descriptor()
}

func (PatchOp) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_enumTypes[0]
}

func (x PatchOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PatchOp.Descriptor instead.
func (PatchOp) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP(), []int{0}
}

type SyncResults struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequiredPatches *PatchList             `protobuf:"bytes,2,opt,name=requiredPatches,proto3" json:"requiredPatches,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SyncResults) Reset() {
	*x = SyncResults{}
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResults) ProtoMessage() {}

func (x *SyncResults) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResults.ProtoReflect.Descriptor instead.
func (*SyncResults) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP(), []int{0}
}

func (x *SyncResults) GetRequiredPatches() *PatchList {
	if x != nil {
		return x.RequiredPatches
	}
	return nil
}

type UpdateManifestEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Package       string                 `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Digest        string                 `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateManifestEntry) Reset() {
	*x = UpdateManifestEntry{}
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateManifestEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManifestEntry) ProtoMessage() {}

func (x *UpdateManifestEntry) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManifestEntry.ProtoReflect.Descriptor instead.
func (*UpdateManifestEntry) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateManifestEntry) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *UpdateManifestEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateManifestEntry) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type UpdateManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*UpdateManifestEntry `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateManifest) Reset() {
	*x = UpdateManifest{}
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManifest) ProtoMessage() {}

func (x *UpdateManifest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManifest.ProtoReflect.Descriptor instead.
func (*UpdateManifest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateManifest) GetItems() []*UpdateManifestEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

type PluginArchiveEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *UpdateManifestEntry   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginArchiveEntry) Reset() {
	*x = PluginArchiveEntry{}
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginArchiveEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginArchiveEntry) ProtoMessage() {}

func (x *PluginArchiveEntry) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginArchiveEntry.ProtoReflect.Descriptor instead.
func (*PluginArchiveEntry) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP(), []int{3}
}

func (x *PluginArchiveEntry) GetMetadata() *UpdateManifestEntry {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PluginArchiveEntry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PluginArchive struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*PluginArchiveEntry  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginArchive) Reset() {
	*x = PluginArchive{}
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginArchive) ProtoMessage() {}

func (x *PluginArchive) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginArchive.ProtoReflect.Descriptor instead.
func (*PluginArchive) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP(), []int{4}
}

func (x *PluginArchive) GetItems() []*PluginArchiveEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

// opPath should be empty when op == PatchRename
// bytes should be empty when op == PatchRemove
type PatchSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Package       string                 `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	Op            PatchOp                `protobuf:"varint,2,opt,name=op,proto3,enum=control.PatchOp" json:"op,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	OldDigest     string                 `protobuf:"bytes,5,opt,name=oldDigest,proto3" json:"oldDigest,omitempty"`
	NewDigest     string                 `protobuf:"bytes,6,opt,name=newDigest,proto3" json:"newDigest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchSpec) Reset() {
	*x = PatchSpec{}
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchSpec) ProtoMessage() {}

func (x *PatchSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchSpec.ProtoReflect.Descriptor instead.
func (*PatchSpec) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP(), []int{5}
}

func (x *PatchSpec) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *PatchSpec) GetOp() PatchOp {
	if x != nil {
		return x.Op
	}
	return PatchOp_None
}

func (x *PatchSpec) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PatchSpec) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PatchSpec) GetOldDigest() string {
	if x != nil {
		return x.OldDigest
	}
	return ""
}

func (x *PatchSpec) GetNewDigest() string {
	if x != nil {
		return x.NewDigest
	}
	return ""
}

type PatchList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*PatchSpec           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchList) Reset() {
	*x = PatchList{}
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchList) ProtoMessage() {}

func (x *PatchList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchList.ProtoReflect.Descriptor instead.
func (*PatchList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP(), []int{6}
}

func (x *PatchList) GetItems() []*PatchSpec {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_github_com_rancher_opni_pkg_apis_control_v1_remote_proto protoreflect.FileDescriptor

const file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDesc = "" +
	"\n" +
	"8github.com/rancher/opni/pkg/apis/control/v1/remote.proto\x12\acontrol\x1a*github.com/kralicky/totem/extensions.proto\x1a3github.com/rancher/opni/pkg/apis/core/v1/core.proto\x1a\x1bgoogle/protobuf/empty.proto\"K\n" +
	"\vSyncResults\x12<\n" +
	"\x0frequiredPatches\x18\x02 \x01(\v2\x12.control.PatchListR\x0frequiredPatches\"[\n" +
	"\x13UpdateManifestEntry\x12\x18\n" +
	"\apackage\x18\x01 \x01(\tR\apackage\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x16\n" +
	"\x06digest\x18\x03 \x01(\tR\x06digest\"D\n" +
	"\x0eUpdateManifest\x122\n" +
	"\x05items\x18\x01 \x03(\v2\x1c.control.UpdateManifestEntryR\x05items\"b\n" +
	"\x12PluginArchiveEntry\x128\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1c.control.UpdateManifestEntryR\bmetadata\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"B\n" +
	"\rPluginArchive\x121\n" +
	"\x05items\x18\x01 \x03(\v2\x1b.control.PluginArchiveEntryR\x05items\"\xab\x01\n" +
	"\tPatchSpec\x12\x18\n" +
	"\apackage\x18\x01 \x01(\tR\apackage\x12 \n" +
	"\x02op\x18\x02 \x01(\x0e2\x10.control.PatchOpR\x02op\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12\x1c\n" +
	"\toldDigest\x18\x05 \x01(\tR\toldDigest\x12\x1c\n" +
	"\tnewDigest\x18\x06 \x01(\tR\tnewDigest\"5\n" +
	"\tPatchList\x12(\n" +
	"\x05items\x18\x01 \x03(\v2\x12.control.PatchSpecR\x05items*C\n" +
	"\aPatchOp\x12\b\n" +
	"\x04None\x10\x00\x12\n" +
	"\n" +
	"\x06Update\x10\x01\x12\n" +
	"\n" +
	"\x06Create\x10\x02\x12\n" +
	"\n" +
	"\x06Remove\x10\x03\x12\n" +
	"\n" +
	"\x06Rename\x10\x042;\n" +
	"\x06Health\x121\n" +
	"\tGetHealth\x12\x16.google.protobuf.Empty\x1a\f.core.Health2F\n" +
	"\x0eHealthListener\x124\n" +
	"\fUpdateHealth\x12\f.core.Health\x1a\x16.google.protobuf.Empty2K\n" +
	"\n" +
	"UpdateSync\x12=\n" +
	"\fSyncManifest\x12\x17.control.UpdateManifest\x1a\x14.control.SyncResultsB-Z+github.com/rancher/opni/pkg/apis/control/v1b\x06proto3"

var (
	file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescData []byte
)

func file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDesc), len(file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDesc)))
	})
	return file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDescData
}

var file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_goTypes = []any{
	(PatchOp)(0),                // 0: control.PatchOp
	(*SyncResults)(nil),         // 1: control.SyncResults
	(*UpdateManifestEntry)(nil), // 2: control.UpdateManifestEntry
	(*UpdateManifest)(nil),      // 3: control.UpdateManifest
	(*PluginArchiveEntry)(nil),  // 4: control.PluginArchiveEntry
	(*PluginArchive)(nil),       // 5: control.PluginArchive
	(*PatchSpec)(nil),           // 6: control.PatchSpec
	(*PatchList)(nil),           // 7: control.PatchList
	(*emptypb.Empty)(nil),       // 8: google.protobuf.Empty
	(*v1.Health)(nil),           // 9: core.Health
}
var file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_depIdxs = []int32{
	7, // 0: control.SyncResults.requiredPatches:type_name -> control.PatchList
	2, // 1: control.UpdateManifest.items:type_name -> control.UpdateManifestEntry
	2, // 2: control.PluginArchiveEntry.metadata:type_name -> control.UpdateManifestEntry
	4, // 3: control.PluginArchive.items:type_name -> control.PluginArchiveEntry
	0, // 4: control.PatchSpec.op:type_name -> control.PatchOp
	6, // 5: control.PatchList.items:type_name -> control.PatchSpec
	8, // 6: control.Health.GetHealth:input_type -> google.protobuf.Empty
	9, // 7: control.HealthListener.UpdateHealth:input_type -> core.Health
	3, // 8: control.UpdateSync.SyncManifest:input_type -> control.UpdateManifest
	9, // 9: control.Health.GetHealth:output_type -> core.Health
	8, // 10: control.HealthListener.UpdateHealth:output_type -> google.protobuf.Empty
	1, // 11: control.UpdateSync.SyncManifest:output_type -> control.SyncResults
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_init() }
func file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_init() {
	if File_github_com_rancher_opni_pkg_apis_control_v1_remote_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDesc), len(file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_depIdxs,
		EnumInfos:         file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_enumTypes,
		MessageInfos:      file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_pkg_apis_control_v1_remote_proto = out.File
	file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_goTypes = nil
	file_github_com_rancher_opni_pkg_apis_control_v1_remote_proto_depIdxs = nil
}
