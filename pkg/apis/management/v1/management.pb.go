// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: github.com/rancher/opni/pkg/apis/management/v1/management.proto

package v1

import (
	_ "github.com/kralicky/codegen/cli"
	v11 "github.com/rancher/opni/pkg/apis/capability/v1"
	v1 "github.com/rancher/opni/pkg/apis/core/v1"
	annotations "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchEventType int32

const (
	WatchEventType_Put    WatchEventType = 0
	WatchEventType_Delete WatchEventType = 2
)

// Enum value maps for WatchEventType.
var (
	WatchEventType_name = map[int32]string{
		0: "Put",
		2: "Delete",
	}
	WatchEventType_value = map[string]int32{
		"Put":    0,
		"Delete": 2,
	}
)

func (x WatchEventType) Enum() *WatchEventType {
	p := new(WatchEventType)
	*p = x
	return p
}

func (x WatchEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatchEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_enumTypes[0].Descriptor()
}

func (WatchEventType) Type() protoreflect.EnumType {
	return &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_enumTypes[0]
}

func (x WatchEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatchEventType.Descriptor instead.
func (WatchEventType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{0}
}

type CreateBootstrapTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ttl           *durationpb.Duration   `protobuf:"bytes,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Capabilities  []*v1.TokenCapability  `protobuf:"bytes,3,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	MaxUsages     int64                  `protobuf:"varint,4,opt,name=maxUsages,proto3" json:"maxUsages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBootstrapTokenRequest) Reset() {
	*x = CreateBootstrapTokenRequest{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBootstrapTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBootstrapTokenRequest) ProtoMessage() {}

func (x *CreateBootstrapTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBootstrapTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateBootstrapTokenRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{0}
}

func (x *CreateBootstrapTokenRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *CreateBootstrapTokenRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateBootstrapTokenRequest) GetCapabilities() []*v1.TokenCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *CreateBootstrapTokenRequest) GetMaxUsages() int64 {
	if x != nil {
		return x.MaxUsages
	}
	return 0
}

type CertsInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         []*v1.CertInfo         `protobuf:"bytes,1,rep,name=chain,proto3" json:"chain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CertsInfoResponse) Reset() {
	*x = CertsInfoResponse{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertsInfoResponse) ProtoMessage() {}

func (x *CertsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertsInfoResponse.ProtoReflect.Descriptor instead.
func (*CertsInfoResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{1}
}

func (x *CertsInfoResponse) GetChain() []*v1.CertInfo {
	if x != nil {
		return x.Chain
	}
	return nil
}

type ListClustersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchLabels   *v1.LabelSelector      `protobuf:"bytes,1,opt,name=matchLabels,proto3" json:"matchLabels,omitempty"`
	MatchOptions  v1.MatchOptions        `protobuf:"varint,2,opt,name=matchOptions,proto3,enum=core.MatchOptions" json:"matchOptions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{2}
}

func (x *ListClustersRequest) GetMatchLabels() *v1.LabelSelector {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *ListClustersRequest) GetMatchOptions() v1.MatchOptions {
	if x != nil {
		return x.MatchOptions
	}
	return v1.MatchOptions(0)
}

type EditClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cluster       *v1.Reference          `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditClusterRequest) Reset() {
	*x = EditClusterRequest{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditClusterRequest) ProtoMessage() {}

func (x *EditClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditClusterRequest.ProtoReflect.Descriptor instead.
func (*EditClusterRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{3}
}

func (x *EditClusterRequest) GetCluster() *v1.Reference {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *EditClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type WatchClustersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KnownClusters *v1.ReferenceList      `protobuf:"bytes,1,opt,name=knownClusters,proto3" json:"knownClusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchClustersRequest) Reset() {
	*x = WatchClustersRequest{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchClustersRequest) ProtoMessage() {}

func (x *WatchClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchClustersRequest.ProtoReflect.Descriptor instead.
func (*WatchClustersRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{4}
}

func (x *WatchClustersRequest) GetKnownClusters() *v1.ReferenceList {
	if x != nil {
		return x.KnownClusters
	}
	return nil
}

type WatchEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cluster       *v1.Cluster            `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Type          WatchEventType         `protobuf:"varint,2,opt,name=type,proto3,enum=management.WatchEventType" json:"type,omitempty"`
	Previous      *v1.Cluster            `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchEvent) Reset() {
	*x = WatchEvent{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEvent) ProtoMessage() {}

func (x *WatchEvent) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEvent.ProtoReflect.Descriptor instead.
func (*WatchEvent) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{5}
}

func (x *WatchEvent) GetCluster() *v1.Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *WatchEvent) GetType() WatchEventType {
	if x != nil {
		return x.Type
	}
	return WatchEventType_Put
}

func (x *WatchEvent) GetPrevious() *v1.Cluster {
	if x != nil {
		return x.Previous
	}
	return nil
}

type APIExtensionInfoList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*APIExtensionInfo    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIExtensionInfoList) Reset() {
	*x = APIExtensionInfoList{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIExtensionInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIExtensionInfoList) ProtoMessage() {}

func (x *APIExtensionInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIExtensionInfoList.ProtoReflect.Descriptor instead.
func (*APIExtensionInfoList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{6}
}

func (x *APIExtensionInfoList) GetItems() []*APIExtensionInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type APIExtensionInfo struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	ServiceDesc   *descriptorpb.ServiceDescriptorProto `protobuf:"bytes,1,opt,name=serviceDesc,proto3" json:"serviceDesc,omitempty"`
	Rules         []*HTTPRuleDescriptor                `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIExtensionInfo) Reset() {
	*x = APIExtensionInfo{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIExtensionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIExtensionInfo) ProtoMessage() {}

func (x *APIExtensionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIExtensionInfo.ProtoReflect.Descriptor instead.
func (*APIExtensionInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{7}
}

func (x *APIExtensionInfo) GetServiceDesc() *descriptorpb.ServiceDescriptorProto {
	if x != nil {
		return x.ServiceDesc
	}
	return nil
}

func (x *APIExtensionInfo) GetRules() []*HTTPRuleDescriptor {
	if x != nil {
		return x.Rules
	}
	return nil
}

type HTTPRuleDescriptor struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Http          *annotations.HttpRule               `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Method        *descriptorpb.MethodDescriptorProto `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPRuleDescriptor) Reset() {
	*x = HTTPRuleDescriptor{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPRuleDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPRuleDescriptor) ProtoMessage() {}

func (x *HTTPRuleDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPRuleDescriptor.ProtoReflect.Descriptor instead.
func (*HTTPRuleDescriptor) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{8}
}

func (x *HTTPRuleDescriptor) GetHttp() *annotations.HttpRule {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *HTTPRuleDescriptor) GetMethod() *descriptorpb.MethodDescriptorProto {
	if x != nil {
		return x.Method
	}
	return nil
}

type GatewayConfig struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Documents     []*ConfigDocumentWithSchema `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayConfig) Reset() {
	*x = GatewayConfig{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayConfig) ProtoMessage() {}

func (x *GatewayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayConfig.ProtoReflect.Descriptor instead.
func (*GatewayConfig) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{9}
}

func (x *GatewayConfig) GetDocuments() []*ConfigDocumentWithSchema {
	if x != nil {
		return x.Documents
	}
	return nil
}

type ConfigDocumentWithSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Json          []byte                 `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	Yaml          []byte                 `protobuf:"bytes,2,opt,name=yaml,proto3" json:"yaml,omitempty"`
	Schema        []byte                 `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigDocumentWithSchema) Reset() {
	*x = ConfigDocumentWithSchema{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDocumentWithSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDocumentWithSchema) ProtoMessage() {}

func (x *ConfigDocumentWithSchema) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDocumentWithSchema.ProtoReflect.Descriptor instead.
func (*ConfigDocumentWithSchema) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigDocumentWithSchema) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *ConfigDocumentWithSchema) GetYaml() []byte {
	if x != nil {
		return x.Yaml
	}
	return nil
}

func (x *ConfigDocumentWithSchema) GetSchema() []byte {
	if x != nil {
		return x.Schema
	}
	return nil
}

type ConfigDocument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Json          []byte                 `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigDocument) Reset() {
	*x = ConfigDocument{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDocument) ProtoMessage() {}

func (x *ConfigDocument) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDocument.ProtoReflect.Descriptor instead.
func (*ConfigDocument) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigDocument) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

type UpdateConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*ConfigDocument      `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConfigRequest) Reset() {
	*x = UpdateConfigRequest{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigRequest) ProtoMessage() {}

func (x *UpdateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateConfigRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateConfigRequest) GetDocuments() []*ConfigDocument {
	if x != nil {
		return x.Documents
	}
	return nil
}

type CapabilityList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*CapabilityInfo      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapabilityList) Reset() {
	*x = CapabilityList{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityList) ProtoMessage() {}

func (x *CapabilityList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityList.ProtoReflect.Descriptor instead.
func (*CapabilityList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{13}
}

func (x *CapabilityList) GetItems() []*CapabilityInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type CapabilityInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *v11.Details           `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	NodeCount     int32                  `protobuf:"varint,2,opt,name=nodeCount,proto3" json:"nodeCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapabilityInfo) Reset() {
	*x = CapabilityInfo{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityInfo) ProtoMessage() {}

func (x *CapabilityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityInfo.ProtoReflect.Descriptor instead.
func (*CapabilityInfo) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{14}
}

func (x *CapabilityInfo) GetDetails() *v11.Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *CapabilityInfo) GetNodeCount() int32 {
	if x != nil {
		return x.NodeCount
	}
	return 0
}

type DashboardSettings struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Global        *DashboardGlobalSettings `protobuf:"bytes,1,opt,name=global,proto3,oneof" json:"global,omitempty"`
	User          map[string]string        `protobuf:"bytes,2,rep,name=user,proto3" json:"user,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardSettings) Reset() {
	*x = DashboardSettings{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardSettings) ProtoMessage() {}

func (x *DashboardSettings) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardSettings.ProtoReflect.Descriptor instead.
func (*DashboardSettings) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{15}
}

func (x *DashboardSettings) GetGlobal() *DashboardGlobalSettings {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *DashboardSettings) GetUser() map[string]string {
	if x != nil {
		return x.User
	}
	return nil
}

type DashboardGlobalSettings struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	DefaultImageRepository string                 `protobuf:"bytes,1,opt,name=defaultImageRepository,proto3" json:"defaultImageRepository,omitempty"`
	DefaultTokenTtl        *durationpb.Duration   `protobuf:"bytes,2,opt,name=defaultTokenTtl,proto3" json:"defaultTokenTtl,omitempty"`
	DefaultTokenLabels     map[string]string      `protobuf:"bytes,3,rep,name=defaultTokenLabels,proto3" json:"defaultTokenLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DashboardGlobalSettings) Reset() {
	*x = DashboardGlobalSettings{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardGlobalSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardGlobalSettings) ProtoMessage() {}

func (x *DashboardGlobalSettings) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardGlobalSettings.ProtoReflect.Descriptor instead.
func (*DashboardGlobalSettings) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{16}
}

func (x *DashboardGlobalSettings) GetDefaultImageRepository() string {
	if x != nil {
		return x.DefaultImageRepository
	}
	return ""
}

func (x *DashboardGlobalSettings) GetDefaultTokenTtl() *durationpb.Duration {
	if x != nil {
		return x.DefaultTokenTtl
	}
	return nil
}

func (x *DashboardGlobalSettings) GetDefaultTokenLabels() map[string]string {
	if x != nil {
		return x.DefaultTokenLabels
	}
	return nil
}

type LocalPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Password      string                 `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalPasswordResponse) Reset() {
	*x = LocalPasswordResponse{}
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalPasswordResponse) ProtoMessage() {}

func (x *LocalPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalPasswordResponse.ProtoReflect.Descriptor instead.
func (*LocalPasswordResponse) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP(), []int{17}
}

func (x *LocalPasswordResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_github_com_rancher_opni_pkg_apis_management_v1_management_proto protoreflect.FileDescriptor

const file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDesc = "" +
	"\n" +
	"?github.com/rancher/opni/pkg/apis/management/v1/management.proto\x12\n" +
	"management\x1a)github.com/kralicky/codegen/cli/cli.proto\x1a?github.com/rancher/opni/pkg/apis/capability/v1/capability.proto\x1a3github.com/rancher/opni/pkg/apis/core/v1/core.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x15google/api/http.proto\x1a google/protobuf/descriptor.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xab\x02\n" +
	"\x1bCreateBootstrapTokenRequest\x12+\n" +
	"\x03ttl\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x03ttl\x12K\n" +
	"\x06labels\x18\x02 \x03(\v23.management.CreateBootstrapTokenRequest.LabelsEntryR\x06labels\x129\n" +
	"\fcapabilities\x18\x03 \x03(\v2\x15.core.TokenCapabilityR\fcapabilities\x12\x1c\n" +
	"\tmaxUsages\x18\x04 \x01(\x03R\tmaxUsages\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"9\n" +
	"\x11CertsInfoResponse\x12$\n" +
	"\x05chain\x18\x01 \x03(\v2\x0e.core.CertInfoR\x05chain\"\x84\x01\n" +
	"\x13ListClustersRequest\x125\n" +
	"\vmatchLabels\x18\x01 \x01(\v2\x13.core.LabelSelectorR\vmatchLabels\x126\n" +
	"\fmatchOptions\x18\x02 \x01(\x0e2\x12.core.MatchOptionsR\fmatchOptions\"\xbe\x01\n" +
	"\x12EditClusterRequest\x12)\n" +
	"\acluster\x18\x01 \x01(\v2\x0f.core.ReferenceR\acluster\x12B\n" +
	"\x06labels\x18\x02 \x03(\v2*.management.EditClusterRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Q\n" +
	"\x14WatchClustersRequest\x129\n" +
	"\rknownClusters\x18\x01 \x01(\v2\x13.core.ReferenceListR\rknownClusters\"\x90\x01\n" +
	"\n" +
	"WatchEvent\x12'\n" +
	"\acluster\x18\x01 \x01(\v2\r.core.ClusterR\acluster\x12.\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1a.management.WatchEventTypeR\x04type\x12)\n" +
	"\bprevious\x18\x03 \x01(\v2\r.core.ClusterR\bprevious\"J\n" +
	"\x14APIExtensionInfoList\x122\n" +
	"\x05items\x18\x01 \x03(\v2\x1c.management.APIExtensionInfoR\x05items\"\x93\x01\n" +
	"\x10APIExtensionInfo\x12I\n" +
	"\vserviceDesc\x18\x01 \x01(\v2'.google.protobuf.ServiceDescriptorProtoR\vserviceDesc\x124\n" +
	"\x05rules\x18\x02 \x03(\v2\x1e.management.HTTPRuleDescriptorR\x05rules\"~\n" +
	"\x12HTTPRuleDescriptor\x12(\n" +
	"\x04http\x18\x01 \x01(\v2\x14.google.api.HttpRuleR\x04http\x12>\n" +
	"\x06method\x18\x02 \x01(\v2&.google.protobuf.MethodDescriptorProtoR\x06method\"S\n" +
	"\rGatewayConfig\x12B\n" +
	"\tdocuments\x18\x01 \x03(\v2$.management.ConfigDocumentWithSchemaR\tdocuments\"Z\n" +
	"\x18ConfigDocumentWithSchema\x12\x12\n" +
	"\x04json\x18\x01 \x01(\fR\x04json\x12\x12\n" +
	"\x04yaml\x18\x02 \x01(\fR\x04yaml\x12\x16\n" +
	"\x06schema\x18\x03 \x01(\fR\x06schema\"$\n" +
	"\x0eConfigDocument\x12\x12\n" +
	"\x04json\x18\x01 \x01(\fR\x04json\"O\n" +
	"\x13UpdateConfigRequest\x128\n" +
	"\tdocuments\x18\x01 \x03(\v2\x1a.management.ConfigDocumentR\tdocuments\"B\n" +
	"\x0eCapabilityList\x120\n" +
	"\x05items\x18\x01 \x03(\v2\x1a.management.CapabilityInfoR\x05items\"]\n" +
	"\x0eCapabilityInfo\x12-\n" +
	"\adetails\x18\x01 \x01(\v2\x13.capability.DetailsR\adetails\x12\x1c\n" +
	"\tnodeCount\x18\x02 \x01(\x05R\tnodeCount\"\xd6\x01\n" +
	"\x11DashboardSettings\x12@\n" +
	"\x06global\x18\x01 \x01(\v2#.management.DashboardGlobalSettingsH\x00R\x06global\x88\x01\x01\x12;\n" +
	"\x04user\x18\x02 \x03(\v2'.management.DashboardSettings.UserEntryR\x04user\x1a7\n" +
	"\tUserEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\t\n" +
	"\a_global\"\xca\x02\n" +
	"\x17DashboardGlobalSettings\x126\n" +
	"\x16defaultImageRepository\x18\x01 \x01(\tR\x16defaultImageRepository\x12C\n" +
	"\x0fdefaultTokenTtl\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0fdefaultTokenTtl\x12k\n" +
	"\x12defaultTokenLabels\x18\x03 \x03(\v2;.management.DashboardGlobalSettings.DefaultTokenLabelsEntryR\x12defaultTokenLabels\x1aE\n" +
	"\x17DefaultTokenLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"3\n" +
	"\x15LocalPasswordResponse\x12\x1a\n" +
	"\bpassword\x18\x01 \x01(\tR\bpassword*%\n" +
	"\x0eWatchEventType\x12\a\n" +
	"\x03Put\x10\x00\x12\n" +
	"\n" +
	"\x06Delete\x10\x022\x8e\x01\n" +
	"\rLocalPassword\x12o\n" +
	"\x13CreateLocalPassword\x12\x16.google.protobuf.Empty\x1a!.management.LocalPasswordResponse\"\x1d\x82\xc0\f\x19\x8a\xc0\f\x15create-local-password\x1a\f\x82\xc0\f\b\x8a\xc0\f\x04auth2\xb6\x1f\n" +
	"\n" +
	"Management\x12i\n" +
	"\x14CreateBootstrapToken\x12'.management.CreateBootstrapTokenRequest\x1a\x14.core.BootstrapToken\"\x12\x82\xd3\xe4\x93\x02\f:\x01*\"\a/tokens\x12U\n" +
	"\x14RevokeBootstrapToken\x12\x0f.core.Reference\x1a\x16.google.protobuf.Empty\"\x14\x82\xd3\xe4\x93\x02\x0e*\f/tokens/{id}\x12X\n" +
	"\x13ListBootstrapTokens\x12\x16.google.protobuf.Empty\x1a\x18.core.BootstrapTokenList\"\x0f\x82\xd3\xe4\x93\x02\t\x12\a/tokens\x12P\n" +
	"\x11GetBootstrapToken\x12\x0f.core.Reference\x1a\x14.core.BootstrapToken\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/tokens/{id}\x12U\n" +
	"\fListClusters\x12\x1f.management.ListClustersRequest\x1a\x11.core.ClusterList\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/clusters\x12g\n" +
	"\rWatchClusters\x12 .management.WatchClustersRequest\x1a\x16.management.WatchEvent\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\x12\x0f/watch/clusters0\x01\x12P\n" +
	"\rDeleteCluster\x12\x0f.core.Reference\x1a\x16.google.protobuf.Empty\"\x16\x82\xd3\xe4\x93\x02\x10*\x0e/clusters/{id}\x12R\n" +
	"\tCertsInfo\x12\x16.google.protobuf.Empty\x1a\x1d.management.CertsInfoResponse\"\x0e\x82\xd3\xe4\x93\x02\b\x12\x06/certs\x12D\n" +
	"\n" +
	"GetCluster\x12\x0f.core.Reference\x1a\r.core.Cluster\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/clusters/{id}\x12\\\n" +
	"\x16GetClusterHealthStatus\x12\x0f.core.Reference\x1a\x12.core.HealthStatus\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/clusters/{id}/health\x12f\n" +
	"\x18WatchClusterHealthStatus\x12\x16.google.protobuf.Empty\x1a\x19.core.ClusterHealthStatus\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/watch/health0\x01\x12_\n" +
	"\vEditCluster\x12\x1e.management.EditClusterRequest\x1a\r.core.Cluster\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\x1a\x16/clusters/{cluster.id}\x12[\n" +
	"\x10ListRBACBackends\x12\x16.google.protobuf.Empty\x1a\x18.core.CapabilityTypeList\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/rbac/backend\x12|\n" +
	"\x1eGetAvailableBackendPermissions\x12\x14.core.CapabilityType\x1a\x1a.core.AvailablePermissions\"(\x82\xd3\xe4\x93\x02\"\x12 /rbac/backend/{name}/permissions\x12\x90\x01\n" +
	"\x11CreateBackendRole\x12\x11.core.BackendRole\x1a\x16.google.protobuf.Empty\"P\x82\xc0\f\x1c\x8a\xc0\f\x14backend-roles create\xb0\xc0\f\x01\x82\xd3\xe4\x93\x02*:\x01*\"%/rbac/backend/{capability.name}/roles\x12\x90\x01\n" +
	"\x11UpdateBackendRole\x12\x11.core.BackendRole\x1a\x16.google.protobuf.Empty\"P\x82\xc0\f\x1c\x8a\xc0\f\x14backend-roles update\xb0\xc0\f\x01\x82\xd3\xe4\x93\x02*:\x01*\x1a%/rbac/backend/{capability.name}/roles\x12\x9d\x01\n" +
	"\x11DeleteBackendRole\x12\x18.core.BackendRoleRequest\x1a\x16.google.protobuf.Empty\"V\x82\xc0\f\x18\x8a\xc0\f\x14backend-roles delete\x82\xd3\xe4\x93\x024*2/rbac/backend/{capability.name}/roles/{roleRef.id}\x12\x8b\x01\n" +
	"\x0eGetBackendRole\x12\x18.core.BackendRoleRequest\x1a\n" +
	".core.Role\"S\x82\xc0\f\x15\x8a\xc0\f\x11backend-roles get\x82\xd3\xe4\x93\x024\x122/rbac/backend/{capability.name}/roles/{roleRef.id}\x12v\n" +
	"\x10ListBackendRoles\x12\x14.core.CapabilityType\x1a\x0e.core.RoleList\"<\x82\xc0\f\x16\x8a\xc0\f\x12backend-roles list\x82\xd3\xe4\x93\x02\x1c\x12\x1a/rbac/backend/{name}/roles\x12r\n" +
	"\x13AddAdminRoleBinding\x12\x0f.core.Reference\x1a\x16.google.protobuf.Empty\"2\x82\xc0\f\x12\x8a\xc0\f\x0eadmin-role add\x82\xd3\xe4\x93\x02\x16\x1a\x14/rbac/mgmt/user/{id}\x12x\n" +
	"\x16RemoveAdminRoleBinding\x12\x0f.core.Reference\x1a\x16.google.protobuf.Empty\"5\x82\xc0\f\x15\x8a\xc0\f\x11admin-role remove\x82\xd3\xe4\x93\x02\x16*\x14/rbac/mgmt/user/{id}\x12s\n" +
	"\x14ListAdminRoleBinding\x12\x16.google.protobuf.Empty\x1a\x13.core.ReferenceList\".\x82\xc0\f\x13\x8a\xc0\f\x0fadmin-role list\x82\xd3\xe4\x93\x02\x11\x12\x0f/rbac/mgmt/user\x12X\n" +
	"\x11CreateRoleBinding\x12\x11.core.RoleBinding\x1a\x16.google.protobuf.Empty\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/rolebindings\x12X\n" +
	"\x11UpdateRoleBinding\x12\x11.core.RoleBinding\x1a\x16.google.protobuf.Empty\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\x1a\r/rolebindings\x12X\n" +
	"\x11DeleteRoleBinding\x12\x0f.core.Reference\x1a\x16.google.protobuf.Empty\"\x1a\x82\xd3\xe4\x93\x02\x14*\x12/rolebindings/{id}\x12P\n" +
	"\x0eGetRoleBinding\x12\x0f.core.Reference\x1a\x11.core.RoleBinding\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/rolebindings/{id}\x12X\n" +
	"\x10ListRoleBindings\x12\x16.google.protobuf.Empty\x1a\x15.core.RoleBindingList\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/rolebindings\x12a\n" +
	"\rAPIExtensions\x12\x16.google.protobuf.Empty\x1a .management.APIExtensionInfoList\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/apiextensions\x12]\n" +
	"\x10ListCapabilities\x12\x16.google.protobuf.Empty\x1a\x1a.management.CapabilityList\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/capabilities\x12\x92\x01\n" +
	"\x11InstallCapability\x12\x1a.capability.InstallRequest\x1a\x1b.capability.InstallResponse\"D\x82\xd3\xe4\x93\x02>:\x01*\"9/clusters/{agent.id}/capabilities/{capability.id}/install\x12\x93\x01\n" +
	"\x13UninstallCapability\x12\x1c.capability.UninstallRequest\x1a\x16.google.protobuf.Empty\"F\x82\xd3\xe4\x93\x02@:\x01*\";/clusters/{agent.id}/capabilities/{capability.id}/uninstall\x12\x91\x01\n" +
	"\x10CapabilityStatus\x12\x19.capability.StatusRequest\x1a .capability.NodeCapabilityStatus\"@\x82\xd3\xe4\x93\x02:\x128/clusters/{agent.id}/capabilities/{capability.id}/status\x12\x9d\x01\n" +
	"\x19CapabilityUninstallStatus\x12\".capability.UninstallStatusRequest\x1a\x10.core.TaskStatus\"J\x82\xd3\xe4\x93\x02D\x12B/clusters/{agent.id}/capabilities/{capability.id}/uninstall/status\x12\xa3\x01\n" +
	"\x19CancelCapabilityUninstall\x12\".capability.CancelUninstallRequest\x1a\x16.google.protobuf.Empty\"J\x82\xd3\xe4\x93\x02D\"B/clusters/{agent.id}/capabilities/{capability.id}/uninstall/cancel\x12j\n" +
	"\x14GetDashboardSettings\x12\x16.google.protobuf.Empty\x1a\x1d.management.DashboardSettings\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/dashboard/settings\x12p\n" +
	"\x17UpdateDashboardSettings\x12\x1d.management.DashboardSettings\x1a\x16.google.protobuf.Empty\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\x1a\x13/dashboard/settingsB6\x82\xc0\f\x02\b\x01Z.github.com/rancher/opni/pkg/apis/management/v1b\x06proto3"

var (
	file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescData []byte
)

func file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDesc), len(file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDesc)))
	})
	return file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDescData
}

var file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_goTypes = []any{
	(WatchEventType)(0),                         // 0: management.WatchEventType
	(*CreateBootstrapTokenRequest)(nil),         // 1: management.CreateBootstrapTokenRequest
	(*CertsInfoResponse)(nil),                   // 2: management.CertsInfoResponse
	(*ListClustersRequest)(nil),                 // 3: management.ListClustersRequest
	(*EditClusterRequest)(nil),                  // 4: management.EditClusterRequest
	(*WatchClustersRequest)(nil),                // 5: management.WatchClustersRequest
	(*WatchEvent)(nil),                          // 6: management.WatchEvent
	(*APIExtensionInfoList)(nil),                // 7: management.APIExtensionInfoList
	(*APIExtensionInfo)(nil),                    // 8: management.APIExtensionInfo
	(*HTTPRuleDescriptor)(nil),                  // 9: management.HTTPRuleDescriptor
	(*GatewayConfig)(nil),                       // 10: management.GatewayConfig
	(*ConfigDocumentWithSchema)(nil),            // 11: management.ConfigDocumentWithSchema
	(*ConfigDocument)(nil),                      // 12: management.ConfigDocument
	(*UpdateConfigRequest)(nil),                 // 13: management.UpdateConfigRequest
	(*CapabilityList)(nil),                      // 14: management.CapabilityList
	(*CapabilityInfo)(nil),                      // 15: management.CapabilityInfo
	(*DashboardSettings)(nil),                   // 16: management.DashboardSettings
	(*DashboardGlobalSettings)(nil),             // 17: management.DashboardGlobalSettings
	(*LocalPasswordResponse)(nil),               // 18: management.LocalPasswordResponse
	nil,                                         // 19: management.CreateBootstrapTokenRequest.LabelsEntry
	nil,                                         // 20: management.EditClusterRequest.LabelsEntry
	nil,                                         // 21: management.DashboardSettings.UserEntry
	nil,                                         // 22: management.DashboardGlobalSettings.DefaultTokenLabelsEntry
	(*durationpb.Duration)(nil),                 // 23: google.protobuf.Duration
	(*v1.TokenCapability)(nil),                  // 24: core.TokenCapability
	(*v1.CertInfo)(nil),                         // 25: core.CertInfo
	(*v1.LabelSelector)(nil),                    // 26: core.LabelSelector
	(v1.MatchOptions)(0),                        // 27: core.MatchOptions
	(*v1.Reference)(nil),                        // 28: core.Reference
	(*v1.ReferenceList)(nil),                    // 29: core.ReferenceList
	(*v1.Cluster)(nil),                          // 30: core.Cluster
	(*descriptorpb.ServiceDescriptorProto)(nil), // 31: google.protobuf.ServiceDescriptorProto
	(*annotations.HttpRule)(nil),                // 32: google.api.HttpRule
	(*descriptorpb.MethodDescriptorProto)(nil),  // 33: google.protobuf.MethodDescriptorProto
	(*v11.Details)(nil),                         // 34: capability.Details
	(*emptypb.Empty)(nil),                       // 35: google.protobuf.Empty
	(*v1.CapabilityType)(nil),                   // 36: core.CapabilityType
	(*v1.BackendRole)(nil),                      // 37: core.BackendRole
	(*v1.BackendRoleRequest)(nil),               // 38: core.BackendRoleRequest
	(*v1.RoleBinding)(nil),                      // 39: core.RoleBinding
	(*v11.InstallRequest)(nil),                  // 40: capability.InstallRequest
	(*v11.UninstallRequest)(nil),                // 41: capability.UninstallRequest
	(*v11.StatusRequest)(nil),                   // 42: capability.StatusRequest
	(*v11.UninstallStatusRequest)(nil),          // 43: capability.UninstallStatusRequest
	(*v11.CancelUninstallRequest)(nil),          // 44: capability.CancelUninstallRequest
	(*v1.BootstrapToken)(nil),                   // 45: core.BootstrapToken
	(*v1.BootstrapTokenList)(nil),               // 46: core.BootstrapTokenList
	(*v1.ClusterList)(nil),                      // 47: core.ClusterList
	(*v1.HealthStatus)(nil),                     // 48: core.HealthStatus
	(*v1.ClusterHealthStatus)(nil),              // 49: core.ClusterHealthStatus
	(*v1.CapabilityTypeList)(nil),               // 50: core.CapabilityTypeList
	(*v1.AvailablePermissions)(nil),             // 51: core.AvailablePermissions
	(*v1.Role)(nil),                             // 52: core.Role
	(*v1.RoleList)(nil),                         // 53: core.RoleList
	(*v1.RoleBindingList)(nil),                  // 54: core.RoleBindingList
	(*v11.InstallResponse)(nil),                 // 55: capability.InstallResponse
	(*v11.NodeCapabilityStatus)(nil),            // 56: capability.NodeCapabilityStatus
	(*v1.TaskStatus)(nil),                       // 57: core.TaskStatus
}
var file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_depIdxs = []int32{
	23, // 0: management.CreateBootstrapTokenRequest.ttl:type_name -> google.protobuf.Duration
	19, // 1: management.CreateBootstrapTokenRequest.labels:type_name -> management.CreateBootstrapTokenRequest.LabelsEntry
	24, // 2: management.CreateBootstrapTokenRequest.capabilities:type_name -> core.TokenCapability
	25, // 3: management.CertsInfoResponse.chain:type_name -> core.CertInfo
	26, // 4: management.ListClustersRequest.matchLabels:type_name -> core.LabelSelector
	27, // 5: management.ListClustersRequest.matchOptions:type_name -> core.MatchOptions
	28, // 6: management.EditClusterRequest.cluster:type_name -> core.Reference
	20, // 7: management.EditClusterRequest.labels:type_name -> management.EditClusterRequest.LabelsEntry
	29, // 8: management.WatchClustersRequest.knownClusters:type_name -> core.ReferenceList
	30, // 9: management.WatchEvent.cluster:type_name -> core.Cluster
	0,  // 10: management.WatchEvent.type:type_name -> management.WatchEventType
	30, // 11: management.WatchEvent.previous:type_name -> core.Cluster
	8,  // 12: management.APIExtensionInfoList.items:type_name -> management.APIExtensionInfo
	31, // 13: management.APIExtensionInfo.serviceDesc:type_name -> google.protobuf.ServiceDescriptorProto
	9,  // 14: management.APIExtensionInfo.rules:type_name -> management.HTTPRuleDescriptor
	32, // 15: management.HTTPRuleDescriptor.http:type_name -> google.api.HttpRule
	33, // 16: management.HTTPRuleDescriptor.method:type_name -> google.protobuf.MethodDescriptorProto
	11, // 17: management.GatewayConfig.documents:type_name -> management.ConfigDocumentWithSchema
	12, // 18: management.UpdateConfigRequest.documents:type_name -> management.ConfigDocument
	15, // 19: management.CapabilityList.items:type_name -> management.CapabilityInfo
	34, // 20: management.CapabilityInfo.details:type_name -> capability.Details
	17, // 21: management.DashboardSettings.global:type_name -> management.DashboardGlobalSettings
	21, // 22: management.DashboardSettings.user:type_name -> management.DashboardSettings.UserEntry
	23, // 23: management.DashboardGlobalSettings.defaultTokenTtl:type_name -> google.protobuf.Duration
	22, // 24: management.DashboardGlobalSettings.defaultTokenLabels:type_name -> management.DashboardGlobalSettings.DefaultTokenLabelsEntry
	35, // 25: management.LocalPassword.CreateLocalPassword:input_type -> google.protobuf.Empty
	1,  // 26: management.Management.CreateBootstrapToken:input_type -> management.CreateBootstrapTokenRequest
	28, // 27: management.Management.RevokeBootstrapToken:input_type -> core.Reference
	35, // 28: management.Management.ListBootstrapTokens:input_type -> google.protobuf.Empty
	28, // 29: management.Management.GetBootstrapToken:input_type -> core.Reference
	3,  // 30: management.Management.ListClusters:input_type -> management.ListClustersRequest
	5,  // 31: management.Management.WatchClusters:input_type -> management.WatchClustersRequest
	28, // 32: management.Management.DeleteCluster:input_type -> core.Reference
	35, // 33: management.Management.CertsInfo:input_type -> google.protobuf.Empty
	28, // 34: management.Management.GetCluster:input_type -> core.Reference
	28, // 35: management.Management.GetClusterHealthStatus:input_type -> core.Reference
	35, // 36: management.Management.WatchClusterHealthStatus:input_type -> google.protobuf.Empty
	4,  // 37: management.Management.EditCluster:input_type -> management.EditClusterRequest
	35, // 38: management.Management.ListRBACBackends:input_type -> google.protobuf.Empty
	36, // 39: management.Management.GetAvailableBackendPermissions:input_type -> core.CapabilityType
	37, // 40: management.Management.CreateBackendRole:input_type -> core.BackendRole
	37, // 41: management.Management.UpdateBackendRole:input_type -> core.BackendRole
	38, // 42: management.Management.DeleteBackendRole:input_type -> core.BackendRoleRequest
	38, // 43: management.Management.GetBackendRole:input_type -> core.BackendRoleRequest
	36, // 44: management.Management.ListBackendRoles:input_type -> core.CapabilityType
	28, // 45: management.Management.AddAdminRoleBinding:input_type -> core.Reference
	28, // 46: management.Management.RemoveAdminRoleBinding:input_type -> core.Reference
	35, // 47: management.Management.ListAdminRoleBinding:input_type -> google.protobuf.Empty
	39, // 48: management.Management.CreateRoleBinding:input_type -> core.RoleBinding
	39, // 49: management.Management.UpdateRoleBinding:input_type -> core.RoleBinding
	28, // 50: management.Management.DeleteRoleBinding:input_type -> core.Reference
	28, // 51: management.Management.GetRoleBinding:input_type -> core.Reference
	35, // 52: management.Management.ListRoleBindings:input_type -> google.protobuf.Empty
	35, // 53: management.Management.APIExtensions:input_type -> google.protobuf.Empty
	35, // 54: management.Management.ListCapabilities:input_type -> google.protobuf.Empty
	40, // 55: management.Management.InstallCapability:input_type -> capability.InstallRequest
	41, // 56: management.Management.UninstallCapability:input_type -> capability.UninstallRequest
	42, // 57: management.Management.CapabilityStatus:input_type -> capability.StatusRequest
	43, // 58: management.Management.CapabilityUninstallStatus:input_type -> capability.UninstallStatusRequest
	44, // 59: management.Management.CancelCapabilityUninstall:input_type -> capability.CancelUninstallRequest
	35, // 60: management.Management.GetDashboardSettings:input_type -> google.protobuf.Empty
	16, // 61: management.Management.UpdateDashboardSettings:input_type -> management.DashboardSettings
	18, // 62: management.LocalPassword.CreateLocalPassword:output_type -> management.LocalPasswordResponse
	45, // 63: management.Management.CreateBootstrapToken:output_type -> core.BootstrapToken
	35, // 64: management.Management.RevokeBootstrapToken:output_type -> google.protobuf.Empty
	46, // 65: management.Management.ListBootstrapTokens:output_type -> core.BootstrapTokenList
	45, // 66: management.Management.GetBootstrapToken:output_type -> core.BootstrapToken
	47, // 67: management.Management.ListClusters:output_type -> core.ClusterList
	6,  // 68: management.Management.WatchClusters:output_type -> management.WatchEvent
	35, // 69: management.Management.DeleteCluster:output_type -> google.protobuf.Empty
	2,  // 70: management.Management.CertsInfo:output_type -> management.CertsInfoResponse
	30, // 71: management.Management.GetCluster:output_type -> core.Cluster
	48, // 72: management.Management.GetClusterHealthStatus:output_type -> core.HealthStatus
	49, // 73: management.Management.WatchClusterHealthStatus:output_type -> core.ClusterHealthStatus
	30, // 74: management.Management.EditCluster:output_type -> core.Cluster
	50, // 75: management.Management.ListRBACBackends:output_type -> core.CapabilityTypeList
	51, // 76: management.Management.GetAvailableBackendPermissions:output_type -> core.AvailablePermissions
	35, // 77: management.Management.CreateBackendRole:output_type -> google.protobuf.Empty
	35, // 78: management.Management.UpdateBackendRole:output_type -> google.protobuf.Empty
	35, // 79: management.Management.DeleteBackendRole:output_type -> google.protobuf.Empty
	52, // 80: management.Management.GetBackendRole:output_type -> core.Role
	53, // 81: management.Management.ListBackendRoles:output_type -> core.RoleList
	35, // 82: management.Management.AddAdminRoleBinding:output_type -> google.protobuf.Empty
	35, // 83: management.Management.RemoveAdminRoleBinding:output_type -> google.protobuf.Empty
	29, // 84: management.Management.ListAdminRoleBinding:output_type -> core.ReferenceList
	35, // 85: management.Management.CreateRoleBinding:output_type -> google.protobuf.Empty
	35, // 86: management.Management.UpdateRoleBinding:output_type -> google.protobuf.Empty
	35, // 87: management.Management.DeleteRoleBinding:output_type -> google.protobuf.Empty
	39, // 88: management.Management.GetRoleBinding:output_type -> core.RoleBinding
	54, // 89: management.Management.ListRoleBindings:output_type -> core.RoleBindingList
	7,  // 90: management.Management.APIExtensions:output_type -> management.APIExtensionInfoList
	14, // 91: management.Management.ListCapabilities:output_type -> management.CapabilityList
	55, // 92: management.Management.InstallCapability:output_type -> capability.InstallResponse
	35, // 93: management.Management.UninstallCapability:output_type -> google.protobuf.Empty
	56, // 94: management.Management.CapabilityStatus:output_type -> capability.NodeCapabilityStatus
	57, // 95: management.Management.CapabilityUninstallStatus:output_type -> core.TaskStatus
	35, // 96: management.Management.CancelCapabilityUninstall:output_type -> google.protobuf.Empty
	16, // 97: management.Management.GetDashboardSettings:output_type -> management.DashboardSettings
	35, // 98: management.Management.UpdateDashboardSettings:output_type -> google.protobuf.Empty
	62, // [62:99] is the sub-list for method output_type
	25, // [25:62] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_init() }
func file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_init() {
	if File_github_com_rancher_opni_pkg_apis_management_v1_management_proto != nil {
		return
	}
	file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDesc), len(file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_depIdxs,
		EnumInfos:         file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_enumTypes,
		MessageInfos:      file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_pkg_apis_management_v1_management_proto = out.File
	file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_goTypes = nil
	file_github_com_rancher_opni_pkg_apis_management_v1_management_proto_depIdxs = nil
}
